{"version":3,"sources":["theme.js","contexts/auth/index.js","utils/Error/index.js","providers/auth/index.js","routes.js","Asset/LoginImg.png","components/Login/styles.js","services/api/ProjectOwner/index.js","components/Login/services/index.js","components/Loading/styles.js","components/Loading/index.jsx","components/Login/index.js","scenes/Login/styles.js","scenes/Login/index.jsx","components/Register/styles.js","components/Register/services/index.js","components/Register/index.js","scenes/Register/styles.js","scenes/Register/index.jsx","components/ForgotPassword/styles.js","components/ForgotPassword/services/sendPasswordReset/index.js","components/ForgotPassword/index.js","scenes/ForgotPassword/styles.js","scenes/ForgotPassword/index.js","components/Headerbar/WelcomeIcon/styles.js","components/Headerbar/WelcomeIcon/index.js","components/Headerbar/ProfileButton/styles.js","components/Logout/styles.js","components/Logout/services/index.js","components/Logout/index.js","components/Headerbar/ProfileButton/index.js","components/constants.js","components/Headerbar/styles.js","components/Headerbar/index.jsx","components/Sidebar/ListItemLink/styles.js","components/Sidebar/ListItemLink/index.js","components/Sidebar/CreateProjectBtn/styles.js","components/Sidebar/CreateProjectBtn/index.js","components/Sidebar/styles.js","components/Sidebar/icons.js","components/Sidebar/index.js","components/Authenticated/styles.js","components/Authenticated/index.jsx","components/Dashboard/components/DataCard/styles.js","components/Dashboard/components/DataCard/index.js","components/Dashboard/components/DataCardIcon/index.js","components/Dashboard/PaidFunds/index.js","components/Dashboard/HoldingFunds/index.js","components/Dashboard/OverallProjects/index.js","components/Dashboard/TotalDataCollected/index.js","components/Dashboard/index.jsx","components/Projects/styles.js","components/Projects/services/index.js","components/Projects/ProjectTable/index.js","components/CreateProject/services/index.js","components/CreateProject/styles.js","components/Projects/ProjectDetail/index.js","components/Projects/index.js","components/Profile/services/index.js","components/Profile/styles.js","components/Profile/index.js","components/CreateProject/steppers/Seriousness.js","components/CreateProject/steppers/DemographicSetting.js","components/CreateProject/steppers/SensorSetting.js","components/Balance/services/index.js","components/CreateProject/steppers/BasicSetting.js","components/CreateProject/steppers/Review.js","components/CreateProject/index.js","components/Balance/styles.js","components/Balance/index.js","scenes/Authenticated/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","common","black","white","primary","light","main","dark","secondary","error","contrastText","text","background","default","paper","highlight","AuthContext","createContext","userToken","isLoggingIn","setIsLoggingIn","CustomException","name","msg","type","Error","ErrorTypes","REGISTER_NAME","REGISTER_ORG","REGISTER_EMAIL","REGISTER_PWD","BACKEND_LOGIN","BACKEND_LOGOUT","BIND_PROFILE","BACKEND_PROFILE","LOGIN_EMAIL","LOGIN_PWD","LOGIN_ID_TOKEN","FETCH_PROJ_DETAILS","FETCH_GENDER_TYPES","FETCH_RESEARCH_FIELDS","FETCH_SENSORS","CREAT_PROJECT","FETCH_API","AuthProvider","children","useState","isUserLoggingIn","setLoginState","loginState","Boolean","useEffect","firebase","auth","onAuthStateChanged","authUser","a","retrievedToken","getIdToken","console","log","Provider","value","apiServerDomain","routes","register","title","url","forgotPwd","authenticated","dashboard","login","profile","projects","projectDetails","createProject","balance","api","logout","findProject","getResearchFieldMap","getGenderTypes","getSensors","getApiRange","addBalance","getSensorFrequencies","dataPreview","datadownload","useStyles","makeStyles","loginContainer","width","minWidth","minHeight","maxWidth","maxHeight","height","display","flexDirection","flexWrap","padding","loginBox","backgroundColor","justifyContent","alignItems","insideBox","loginImg","backgroundImage","LoginImg","backgroundPositionX","backgroundPositionY","backgroundRepeat","loginTitle","color","marginTop","fontSize","letterSpacing","fontWeight","loginError","Height","loginForm","margin","spacing","textBox","marginBottom","submit","baseLine","links","imgText","textAlign","FetchFrequencies","axios","get","data","status","statusText","FetchApiRange","FetchSensors","FetchGenderTypes","FetchResearchFieldMap","FetchProjectInfo","projId","idToken","post","projectId","headers","Authorization","Promise","reject","LoginApi","LOGIN_API","SignOutApi","code","errors","SIGNOUT_API","GetUserInfoApi","editProfile","profileObj","userIdToken","sanitizedProfileObj","organisation","phoneNum","researchFields","Object","keys","length","custErr","toString","CreateAProject","projectInfo","BACKEND_PROJECT","UpdateBalance","addedValue","firebaseAuth","email","password","signInWithEmailAndPassword","currentUser","errorName","message","spinner","top","Loading","classes","CircularProgress","className","Login","history","useHistory","useContext","showPassword","values","setValues","handleChange","prop","event","target","handleErrors","validateInput","test","handleSubmit","push","Container","Box","map","Alert","severity","noValidate","TextField","id","variant","required","fullWidth","autoFocus","label","onChange","to","Button","onClick","root","position","LoginScene","scrollBehavior","RegisterTitle","textFieldRoot","createNewUser","pwd","createUserWithEmailAndPassword","validateUserCred","org","confirmPwd","validateName","validateOrg","validateEmailAddr","validatePasswordNotEmpty","validatePasswordMatches","trim","undefined","search","Register","setName","setOrg","emailAddr","setEmailAddr","defaultErrorMsgs","errorMsgs","setErrorMsgs","setPwd","setConfirmPwd","isCreateBtnDisabled","setIsCreateBtnDisabled","createUserBtnDebounce","Paper","Grid","container","direction","item","aria-label","e","helperText","disabled","justify","RegisterScene","resetUserPassword","useDeviceLanguage","sendPasswordResetEmail","ForgotPassword","isSnackbarOpen","setIsSnackbarOpen","errorMsg","setErrorMsg","isBtnDisabled","setIsBtnDisabled","closeSnackbar","reason","btnDebounce","setTimeout","Typography","Snackbar","open","autoHideDuration","onClose","elevation","ForgotPasswordScene","marginLeft","welcomeIcon","float","marginRight","welcomeText","WelcomeIcon","userName","setUserName","getData","Icon","profileBtn","signOutBtn","FirebaseSignout","signOut","Logout","React","setOpen","handleClose","handleSignOut","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","ProfileButton","anchorEle","setAnchorEle","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","getContentAnchorEl","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","DRAWER_WIDTH","appBar","Headerbar","AppBar","Toolbar","listItems","listIcons","listItemsText","ListItemLink","props","iconName","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","btn","CreateProjectButton","startIcon","drawer","flexShrink","drawerPaper","toolbar","mixins","navIcons","Dashboard","Profile","Balance","Sidebar","navBarRoutes","Drawer","anchor","Divider","List","route","idx","icons","overflow","content","flexGrow","Authenticated","ProtectedComponent","cards","DataCard","dataValue","displayIcon","Card","CardHeader","avatar","CardContent","DataCardIcon","iconBackgroundColour","rounded","getContrastText","Avatar","PaidFunds","fundsAmt","useTheme","paidFundsIcon","formatter","Intl","NumberFormat","style","currency","format","HoldingFunds","holdingFundsIcon","OverallProjects","numProjs","overallProjsIcon","maximumFractionDigits","textDecoration","TotalDataCollected","numRecords","totalDataIcon","initDashboardData","paidFundAmt","holdFundAmt","totalProjs","totalData","dashboardData","setDashboardData","userProfileData","updatedDashboardData","hasOwnProperty","call","totalHasFundedMoney","totalAmountDataCollected","fetchProjData","table","noProjMsg","loading","details","flexFlow","backButton","detailsPaper","borderRadius","prjTitle","alignContent","sensors","justifyItems","splitProjsCurrAndPast","projList","researchFieldMap","output","current","past","eachProj","isProjOver","prjStatistic","every","sensor","goalNum","collectedNum","prjResearchField","fetchProjectData","projDetailsPromises","all","resolvedProjDetails","ProjectTable","setProjectDetails","currTab","setCurrTab","currProjData","setCurrProjData","pastProjData","setPastProjData","dataToDisplay","setDataToDisplay","OwnerprojData","getProjData","Tabs","newVal","Tab","TableContainer","Table","stickyHeader","TableHead","TableRow","eachHeader","TableCell","TableBody","Link","inprojectparticipantsNum","desiredParticipantNumber","Skeleton","Array","isArray","BindResearch","BindGender","genderData","BindSensors","sensorsData","BindApiRange","apiRange","steps","instructions","date","right","funding","formControl","chips","chip","researchPaper","listStyle","IOSSwitch","withStyles","switchBase","transform","opacity","border","thumb","track","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","LightTooltip","tooltip","boxShadow","shadows","Tooltip","ProjectDetails","sensorList","setSensorList","frequency","i","LinearProgressWithLabel","mr","LinearProgress","parseFloat","toFixed","window","_id","align","prjDescription","prjStartTime","split","statistic","sensorId","prjRequirements","minimumFrequency","Projects","BindInfo","researchData","profileBox","leftBox","rightBox","profileTitle","largeAvatar","FixedInfo","StyledBadge","badge","Badge","fields","setField","setErrors","load","setLoad","ProfileIconButton","BindingAllInfo","Swal","fire","ReseachData","valueArray","keyArray","count","field","key","parseInt","overlap","badgeContent","charAt","toUpperCase","profileForm","FormControl","InputLabel","Select","multiple","renderValue","selected","Chip","MenuItem","Seriousness","currentSeriousness","getValue","arrow","seriousness","defaultValue","DemographicSetting","setOptionalData","optionalData","genderSelector","setGenderSelector","min","setMin","max","setMax","apiData","l","genderValues","generKeys","j","selector","optionalSetting","FormControlLabel","control","optionalPaper","optionalSelect","GenderPrjRequirement","genders","copyOfGenderPrjRequirement","JSON","parse","stringify","gender","seriousnessValue","MobileSystemPrjRequirement","copyOfMobileSystemPrjRequirement","MobileDeviceTypePrjRequirement","mobileDeviceTypes","copyOfMobileDeviceTypePrjRequirement","Slider","AndroidAPIPrjRequirement","minAPILevel","maxAPILevel","valueLabelDisplay","copyOfAndroidAPIPrjRequirement","SensorSetting","setSensorData","sensorData","newSensor","sensorName","frequencyLevel","recordsNum","sensorSelector","setSensorSelector","handleNewSensor","sensorSetting","sensorDrop","labelWidth","fslider","Fab","size","result","CheckList","stateCopy","tSensor","ListItemSecondaryAction","edge","index","indexOf","copy","splice","BindBalance","BasicSetting","setBasicData","basicData","todayDate","Date","toLocaleDateString","currentBalance","setCurrentBalance","dataType","inputProps","maxLength","multiline","rows","OutlinedInput","prjDuration","endAdornment","InputAdornment","prjParticipantsNum","htmlFor","prjFunding","startAdornment","FormHelperText","Checkbox","isFullRedeemOnly","Review","reviewStep","reviewlines","gutterBottom","noWrap","CreateProject","activeStep","setActiveStep","Set","skipped","setSkipped","copyRequirement","copyGoals","toISOString","conversionRate","mobileSystems","frequencies","setFrequencies","isStepSkipped","step","has","handleNext","newSkipped","delete","prevActiveStep","handleBack","setFinalData","requirementType","forEach","eachOptionalReq","copyOfFrequencies","matchmakingEnable","prjGoals","ToBeSentData","icon","Stepper","alternativeLabel","stepProps","completed","Step","StepLabel","btnGroup","getStepContent","box","topUp","moneyIcon","addValue","addAmount","setAddAmount","handleChanges","InputProps","disableElevation","AuthenticatedScene","useRouteMatch","path","render","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.002f9cd6.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black: \"#424242\",\n      white: \"#ffffff\",\n    },\n    primary: {\n      light: \"#3FD2C7\",\n      main: \"#99DDFF\",\n      dark: \"#00458B\",\n    },\n    secondary: {\n      main: \"#00458B\",\n    },\n    error: {\n      main: \"#d32f2f\",\n      contrastText: \"#ffffff\",\n    },\n    text: {\n      primary: \"#00458B\",\n      secondary: \"#424242\",\n    },\n    background: {\n      default: \"#99DDFF\",\n      paper: \"#ffffff\",\n    },\n    highlight: {\n      main: \"#e54861\",\n    },\n  },\n});\n\nexport default theme;\n","import { createContext } from \"react\";\n\nconst AuthContext = createContext({\n  userToken: null,\n  isLoggingIn: true,\n  setIsLoggingIn: () => {},\n});\n\nexport default AuthContext;\n","export class CustomException extends Error {\n  constructor(name, msg, type = null) {\n    super(msg);\n    this.name = name;\n    this.type = type;\n  }\n}\n\nexport const ErrorTypes = {\n  REGISTER_NAME: \"reg_name\",\n  REGISTER_ORG: \"reg_org\",\n  REGISTER_EMAIL: \"reg_email\",\n  REGISTER_PWD: \"reg_pwd\",\n  BACKEND_LOGIN: \"backend_login\",\n  BACKEND_LOGOUT: \"backend_logout\",\n  BIND_PROFILE: \"bind-profile-info\",\n  BACKEND_PROFILE: \"backend_profile\",\n  LOGIN_EMAIL: \"login_email\",\n  LOGIN_PWD: \"login_pwd\",\n  LOGIN_ID_TOKEN: \"firebase_login_token\",\n  FETCH_PROJ_DETAILS: \"fetch_project_details\",\n  FETCH_GENDER_TYPES: \"fetch_gender_types\",\n  FETCH_RESEARCH_FIELDS: \"fetch_research_fields\",\n  FETCH_SENSORS: \"fetch_sensors\",\n  CREAT_PROJECT: \"creat_project\",\n  FETCH_API: \"fetch_api\",\n};\n","/* global firebase */\nimport React, { useEffect, useState } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport { CustomException } from \"utils/Error\";\n\nconst AuthProvider = ({ children }) => {\n  const [loginState, setLoginState] = useState({\n    userToken: null,\n    isLoggingIn: true,\n    setIsLoggingIn: (isUserLoggingIn) => {\n      setLoginState({ ...loginState, isLoggingIn: Boolean(isUserLoggingIn) });\n    },\n  });\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (authUser) => {\n      // If the user is signed in\n      if (authUser) {\n        let retrievedToken = null;\n        try {\n          retrievedToken = await authUser.getIdToken();\n          return;\n        } catch (error) {\n          throw new CustomException(\n            \"Firebase Auth Error\",\n            \"Could not retrieve the user's Firebase ID token.\"\n          );\n        } finally {\n          setLoginState({\n            ...loginState,\n            userToken: retrievedToken,\n            isLoggingIn: false,\n          });\n        }\n      } else {\n        console.log(authUser);\n        // Else if the user signs out\n        // Make API call to backend: /api/projectowner/auth/logout\n        setLoginState({\n          ...loginState,\n          userToken: null,\n          isLoggingIn: false,\n        });\n      }\n    });\n  }, [loginState.userToken]);\n\n  return (\n    <AuthContext.Provider value={loginState}>{children}</AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","const apiServerDomain = \" http://34.151.82.81\";\n// const apiServerDomain = \"http://ss.caihuashuai.com:3001\";\n\nconst routes = {\n  register: {\n    title: \"Register\",\n    url: \"/register\",\n  },\n  forgotPwd: {\n    title: \"Forgot Password\",\n    url: \"/forgot-pwd\",\n  },\n  authenticated: {\n    title: \"Home\",\n    url: \"/home\",\n  },\n  dashboard: {\n    title: \"Dashboard\",\n    url: \"/dashboard\",\n  },\n  login: {\n    title: \"Login\",\n    url: \"/login\",\n  },\n  profile: {\n    title: \"Profile\",\n    url: \"/profile\",\n  },\n  projects: {\n    title: \"Manage Projects\",\n    url: \"/projects\",\n  },\n  projectDetails: {\n    title: \"Review Project Details\",\n    url: \"/project/details\",\n  },\n  createProject: {\n    title: \"Create a new Project\",\n    url: \"/createproject\",\n  },\n  balance: {\n    title: \"Balance\",\n    url: \"/balance\",\n  },\n  api: {\n    login: apiServerDomain + \"/api/projectowner/auth/login\",\n    logout: apiServerDomain + \"/api/projectowner/auth/logout\",\n    profile: apiServerDomain + \"/api/projectowner/profile\",\n    createProject: apiServerDomain + \"/api/projectowner/project/\",\n    findProject: apiServerDomain + \"/api/projectowner/project/projDetails\",\n    getResearchFieldMap:\n      apiServerDomain + \"/api/projectowner/publicResources/researchFields\",\n    getGenderTypes:\n      apiServerDomain + \"/api/projectowner/publicResources/genderTypes\",\n    getSensors:\n      apiServerDomain + \"/api/projectowner/publicResources/sensorNames\",\n    getApiRange:\n      apiServerDomain + \"/api/projectowner/publicResources/apiLevels\",\n    addBalance: apiServerDomain + \"/api/projectowner/profile/addBalance\",\n    getSensorFrequencies:\n      apiServerDomain + \"/api/projectowner/publicResources/sensorFrequencies\",\n    dataPreview: apiServerDomain + \"/api/projectowner/project/filter\",\n    datadownload:\n      apiServerDomain + \"/api/projectowner/project/records?projectId=\",\n  },\n};\n\nexport default routes;\n","export default __webpack_public_path__ + \"static/media/LoginImg.43babaee.png\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport LoginImg from \"../../Asset/LoginImg.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  loginContainer: {\n    width: \"70%\",\n    minWidth: \"50rem\",\n    minHeight: \"25rem\",\n    maxWidth: \"70rem\",\n    maxHeight: \"40rem\",\n    height: \"70%\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    flexWrap: \"wrap\",\n    padding: \"0px\",\n  },\n\n  loginBox: {\n    height: \"100%\",\n    minHeight: \"25rem\",\n    maxWidth: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  insideBox: {},\n  loginImg: {\n    height: \"100%\",\n    maxWidth: \"50%\",\n    backgroundImage: `url(${LoginImg})`,\n    backgroundPositionX: \"center\",\n    backgroundPositionY: \"100%\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  loginTitle: {\n    color: theme.palette.primary.light,\n    marginTop: \"1.5px\",\n    fontSize: \"27px\",\n    letterSpacing: \"5px\",\n    fontWeight: \"bolder\",\n  },\n  loginError: {\n    Height: \"2.7rem\",\n  },\n  loginForm: {\n    margin: theme.spacing(3),\n  },\n  textBox: {\n    marginBottom: \"1.5rem\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.primary.light,\n    fontSize: \"20px\",\n    fontWeight: \"bolder\",\n    height: \"50px\",\n    letterSpacing: \"5px\",\n  },\n  baseLine: {\n    alignItems: \"center\",\n    fontSize: \"13px\",\n    marginBottom: \"10px\",\n    color: theme.palette.primary.light,\n  },\n  links: {\n    color: theme.palette.primary.dark,\n    fontSize: \"12px\",\n  },\n  imgText: {\n    color: theme.palette.common.white,\n    marginBottom: \"2rem\",\n    fontSize: \"300%\",\n    letterSpacing: \"5px\",\n    fontWeight: \"bolder\",\n    textAlign: \"right\",\n  },\n}));\n\nexport default useStyles;\n","import axios from \"axios\";\nimport routes from \"routes\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\n\n//Data Preview\nexport const DataPreview = async (projId, userIdToken) => {\n  try {\n    const { data, status, statusText } = await axios.post(\n      routes.api.dataPreview,\n      { projectId: projId },\n      {\n        headers: {\n          Authorization: `Bearer ${userIdToken}`,\n        },\n      }\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \" Data Preview Error\",\n        `Did not receive a 200 response when retrieving the API: ${statusText}`\n      );\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Fetch the frequencies\nexport const FetchFrequencies = async () => {\n  try {\n    const { data, status, statusText } = await axios.get(\n      routes.api.getSensorFrequencies\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \" Frequencies Fetch Error\",\n        `Did not receive a 200 response when retrieving the API: ${statusText}`\n      );\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Fetch the Api Range\nexport const FetchApiRange = async () => {\n  try {\n    const { data, status, statusText } = await axios.get(\n      routes.api.getApiRange\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \" API Fetch Error\",\n        `Did not receive a 200 response when retrieving the API: ${statusText}`\n      );\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Fetch the sensors\nexport const FetchSensors = async () => {\n  try {\n    const { data, status, statusText } = await axios.get(routes.api.getSensors);\n\n    if (status !== 200) {\n      throw new CustomException(\n        \" Sensors Fetch Error\",\n        `Did not receive a 200 response when retrieving the sensors: ${statusText}`\n      );\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Fetch the gender types\nexport const FetchGenderTypes = async () => {\n  try {\n    const { data, status, statusText } = await axios.get(\n      routes.api.getGenderTypes\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \"Gender Types Fetch Error\",\n        `Did not receive a 200 response when retrieving the gender types: ${statusText}`\n      );\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// Fetch the Research Field mapping\nexport const FetchResearchFieldMap = async () => {\n  try {\n    console.log(\"inside API call\");\n    const { data, status, statusText } = await axios.get(\n      routes.api.getResearchFieldMap\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \"Research Fields Map Error\",\n        `Did not receive a 200 response when retrieving the research field mapping: ${statusText}`\n      );\n    }\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// Fetch project information\nexport const FetchProjectInfo = async (projId, idToken) => {\n  try {\n    const { data, status, statusText } = await axios.post(\n      routes.api.findProject,\n      {\n        projectId: projId,\n      },\n      {\n        headers: {\n          Authorization: \"Bearer \" + idToken,\n        },\n      }\n    );\n\n    if (status !== 200) {\n      throw new CustomException(\n        \"Project Details Error\",\n        `Did not receive a 200 response when retrieving the project details: ${statusText}`,\n        ErrorTypes.FETCH_PROJ_DETAILS\n      );\n    }\n\n    return data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\n//login\nexport const LoginApi = async (idToken) => {\n  try {\n    const data = await axios.post(\n      routes.api.login,\n      { idToken },\n      {\n        headers: {\n          Authorization: \"Bearer \" + idToken,\n        },\n      }\n    );\n\n    if (data.status !== 200) {\n      throw new CustomException(\n        \"login-api error\",\n        data.data,\n        ErrorTypes.LOGIN_API\n      );\n    }\n  } catch (error) {\n    // console.log(error.toString());\n    console.log(error);\n  }\n};\n\n//Signout\nexport const SignOutApi = async (idToken) => {\n  try {\n    const data = await axios.post(\n      routes.api.logout,\n      {},\n      {\n        headers: {\n          Authorization: \"Bearer \" + idToken,\n        },\n      }\n    );\n\n    if (data.code !== 200) {\n      throw new CustomException(\n        \"signout-api error\",\n        data.errors,\n        ErrorTypes.SIGNOUT_API\n      );\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//get user's information for profile\nexport const GetUserInfoApi = async (idToken) => {\n  try {\n    const data = await axios.get(routes.api.profile, {\n      headers: {\n        Authorization: `Bearer ${idToken}`,\n      },\n    });\n    if (data.status === 200) {\n      console.log(\"success\");\n      console.log(data.data);\n      return data.data;\n    } else if (data.status !== 200) {\n      throw new CustomException(\n        \"profile-api error\",\n        data.statusText,\n        ErrorTypes.BACKEND_PROFILE\n      );\n    }\n\n    return data.data || null;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//edit user's profile\nexport const editProfile = async (profileObj, userIdToken) => {\n  let sanitizedProfileObj = {\n    organisation: \"\",\n    name: \"\",\n    phoneNum: \"\",\n    researchFields: [],\n  };\n\n  if (profileObj.organisation) {\n    sanitizedProfileObj.organisation = profileObj.organisation;\n  } else {\n    delete sanitizedProfileObj.organisation;\n  }\n\n  if (profileObj.name) {\n    sanitizedProfileObj.name = profileObj.name;\n  } else {\n    delete sanitizedProfileObj.name;\n  }\n\n  if (profileObj.phoneNum) {\n    sanitizedProfileObj.phoneNum = profileObj.phoneNum;\n  } else {\n    delete sanitizedProfileObj.phoneNum;\n  }\n\n  if (profileObj.researchFields) {\n    sanitizedProfileObj.researchFields = profileObj.researchFields;\n  } else {\n    delete sanitizedProfileObj.researchFields;\n  }\n\n  try {\n    if (Object.keys(sanitizedProfileObj).length < 1) {\n      throw new Error();\n    }\n  } catch (error) {\n    const errorName = \"Server-side Profile Error\";\n    const custErr = new CustomException(\n      errorName,\n      \"The object provided did not meet the request body requirements.\",\n      ErrorTypes.BACKEND_PROFILE\n    );\n    console.log(custErr.toString());\n  }\n\n  try {\n    await axios.post(routes.api.profile, sanitizedProfileObj, {\n      headers: {\n        Authorization: `Bearer ${userIdToken}`,\n      },\n    });\n  } catch (error) {\n    const errorName = \"Server-side Profile Error\";\n    const custErr = new CustomException(\n      errorName,\n      \"There was an issue editing the user's profile.\",\n      ErrorTypes.BACKEND_PROFILE\n    );\n    console.log(custErr.toString());\n  }\n};\n\n//create a new project\nexport const CreateAProject = async (projectInfo, userIdToken) => {\n  try {\n    const data = await axios.post(routes.api.createProject, projectInfo, {\n      headers: {\n        Authorization: `Bearer ${userIdToken}`,\n      },\n    });\n    if (data.status == 200) {\n      return true;\n    }\n\n    if (data.status !== 200) {\n      throw new CustomException(\n        \"project-creating-api error\",\n        data.statusText,\n        ErrorTypes.BACKEND_PROJECT\n      );\n    }\n\n    return data.data || null;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//update Balance\nexport const UpdateBalance = async (addedValue, userIdToken) => {\n  try {\n    console.log(addedValue);\n    const data = await axios.post(routes.api.addBalance, addedValue, {\n      headers: {\n        Authorization: `Bearer ${userIdToken}`,\n      },\n    });\n    if (data.status == 200) {\n      return true;\n    } else {\n      throw new CustomException(\n        \"project-creating-api error\",\n        data.statusText,\n        ErrorTypes.BACKEND_PROJECT\n      );\n    }\n  } catch (error) {\n    const errorName = \"Server-side Profile Error\";\n    const custErr = new CustomException(\n      errorName,\n      \"There was an issue editing the user's balance.\",\n      ErrorTypes.BACKEND_PROFILE\n    );\n    console.log(custErr.toString());\n  }\n};\n","/*global firebase*/\nimport { CustomException, ErrorTypes } from \"utils/Error\";\nimport { LoginApi } from \"services/api/ProjectOwner\";\n\nexport const firebaseAuth = async (email, password) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n    const retrievedToken = await firebase.auth().currentUser.getIdToken();\n    // Make API call to backend for creating a session\n    await LoginApi(retrievedToken);\n  } catch (error) {\n    let errorName = \"Login Error\";\n\n    switch (error.code) {\n      case \"auth/invalid-email\": {\n        throw new CustomException(\n          errorName,\n          \"Wrong email format!\",\n          ErrorTypes.LOGIN_EMAIL\n        );\n      }\n\n      case \"auth/user-disabled\": {\n        throw new CustomException(\n          errorName,\n          \"This email has been disabled\",\n          ErrorTypes.LOGIN_EMAIL\n        );\n      }\n\n      case \"auth/user-not-found\": {\n        throw new CustomException(\n          errorName,\n          \"This email hasn't been registered.\",\n          ErrorTypes.LOGIN_EMAIL\n        );\n      }\n\n      case \"auth/wrong-password\": {\n        throw new CustomException(\n          errorName,\n          \"the password is invalid for the given email.\",\n          ErrorTypes.LOGIN_PWD\n        );\n      }\n\n      default: {\n        throw new CustomException(errorName, error.message);\n      }\n    }\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  spinner: {\n    top: \"50%\",\n    margin: \"2em\",\n    color: theme.palette.common.white,\n  },\n}));\n\nexport default useStyles;\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"./styles\";\n\nconst Loading = () => {\n  const classes = useStyles();\n\n  return <CircularProgress className={classes.spinner} />;\n};\n\nexport default Loading;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { TextField } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport routes from \"routes\";\nimport { firebaseAuth } from \"./services\";\nimport { ErrorTypes } from \"utils/Error\";\nimport Loading from \"components/Loading\";\n\nfunction Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { userToken, isLoggingIn } = useContext(AuthContext);\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    errors: [],\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleErrors = (error) => {\n    setValues({ ...values, errors: error });\n  };\n\n  //waiting for fixed\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  //waiting for fixed\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const validateInput = () => {\n    const { email, password } = values;\n    if (email === \"\" || password === \"\") {\n      handleErrors([\"Please fill in all the required fields.\"]);\n      return false;\n    } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      handleErrors([\"Email format is invalid. Please fill in again.\"]);\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async () => {\n    const { email, password } = values;\n    if (validateInput()) {\n      try {\n        await firebaseAuth(email, password);\n        history.push(`${routes.authenticated.url}${routes.dashboard.url}`);\n      } catch (error) {\n        handleErrors([]);\n        if (error.type === ErrorTypes.LOGIN_EMAIL) {\n          handleErrors([error.toString()]);\n        } else {\n          handleErrors([error.toString()]);\n        }\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   // If the user has logged in\n  //   if (userToken) {\n  //     history.push(`${routes.authenticated.url}${routes.dashboard.url}`);\n  //   } else {\n  //     console.log(userToken);\n  //   }\n  // }, [userToken, isLoggingIn]);\n\n  return (\n    <Container className={classes.loginContainer}>\n      <Container className={classes.loginBox}>\n        <Box>\n          <div className={classes.loginTitle}>Login</div>\n          <div className={classes.loginError}>\n            {values.errors.length > 0 &&\n              values.errors.map((error) => {\n                return <Alert severity=\"error\">{error}</Alert>;\n              })}\n          </div>\n          <form className={classes.loginForm} noValidate>\n            <TextField\n              type=\"email\"\n              id=\"login-email\"\n              className={classes.textBox}\n              variant=\"standard\"\n              required\n              fullWidth\n              autoFocus\n              label=\"Email\"\n              value={values.email}\n              onChange={handleChange(\"email\")}\n            />\n            <TextField\n              className={classes.textBox}\n              type={values.showPassword ? \"text\" : \"password\"}\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              required\n              fullWidth\n              value={values.password}\n              onChange={handleChange(\"password\")}\n              // endAdornment={\n              //   <InputAdornment position=\"end\">\n              //     <IconButton\n              //       aria-label=\"toggle password visibility\"\n              //       onClick={handleClickShowPassword}\n              //       onMouseDown={handleMouseDownPassword}\n              //     >\n              //       {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              //     </IconButton>\n              //   </InputAdornment>\n              // }\n            />\n            <Link className={classes.links} to=\"/forgot-pwd\">\n              Forget the password?\n            </Link>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Login\n            </Button>\n            <div className={classes.baseLine}>\n              Don't have an account? &nbsp;\n              <Link className={classes.links} to={routes.register.url}>\n                Create an account.\n              </Link>\n            </div>\n          </form>\n        </Box>\n      </Container>\n      <Container className={classes.loginImg}>\n        <Box>\n          <div className={classes.imgText}>Welcome</div>\n          <div className={classes.imgText}>Back</div>\n        </Box>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Login;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"fixed\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Login from \"components/Login\";\nimport useStyles from \"./styles\";\nimport Loading from \"components/Loading\";\nimport { useHistory } from \"react-router-dom\";\nimport routes from \"routes\";\n\nconst LoginScene = () => {\n  const classes = useStyles();\n  const { userToken, isLoggingIn } = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    // If the user has logged in\n    if (userToken) {\n      history.push(`${routes.authenticated.url}${routes.dashboard.url}`);\n    } else {\n      console.log(userToken);\n    }\n  }, [userToken, isLoggingIn]);\n\n  return userToken !== null ? (\n    <Loading />\n  ) : (\n    <div className={classes.root}>\n      <Login />\n    </div>\n  );\n};\n\nexport default LoginScene;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    maxWidth: \"100%\",\n    margin: \"auto\",\n    scrollBehavior: \"auto\",\n    minHeight: \"35rem\",\n  },\n\n  RegisterTitle: {\n    color: theme.palette.primary.light,\n    marginTop: \"1.5px\",\n    fontSize: \"27px\",\n    letterSpacing: \"5px\",\n    fontWeight: \"bolder\",\n  },\n\n  textFieldRoot: {\n    width: \"25rem\",\n    \"& .MuiTextField-root\": {\n      marginTop: theme.spacing(1.5),\n      marginBottom: theme.spacing(1.5),\n    },\n  },\n  submit: {\n    margin: theme.spacing(1.5, 0, 1),\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.primary.light,\n    fontSize: \"20px\",\n    fontWeight: \"bolder\",\n    height: \"50px\",\n    letterSpacing: \"5px\",\n  },\n  links: {\n    color: theme.palette.primary.dark,\n    fontSize: \"12px\",\n  },\n}));\n\nexport default useStyles;\n","/* global firebase */\nimport { CustomException, ErrorTypes } from \"utils/Error\";\nimport { LoginApi } from \"services/api/ProjectOwner\";\n\nexport const createNewUser = async (email, pwd) => {\n  try {\n    // Retrieve the user's credentials\n    await firebase.auth().createUserWithEmailAndPassword(email, pwd);\n    // Once the user successfully logs in, the listener will update the userToken\n    const retrievedToken = await firebase.auth().currentUser.getIdToken();\n    // Make API call to backend for creating a session\n    await LoginApi(retrievedToken);\n    return retrievedToken;\n  } catch (error) {\n    let errorName = \"Registration Error\";\n\n    switch (error.code) {\n      case \"auth/weak-password\": {\n        throw new CustomException(\n          errorName,\n          \"The provided password is too weak, please use a stronger password.\",\n          ErrorTypes.REGISTER_PWD\n        );\n      }\n\n      case \"auth/email-already-in-use\": {\n        throw new CustomException(\n          errorName,\n          \"This email has already been registered.\",\n          ErrorTypes.REGISTER_EMAIL\n        );\n      }\n\n      case \"auth/operation-not-allowed\": {\n        throw new CustomException(\n          errorName,\n          \"This account type is not available. Please contact an administrator.\",\n          ErrorTypes.REGISTER_EMAIL\n        );\n      }\n\n      case \"auth/invalid-email\": {\n        throw new CustomException(\n          errorName,\n          \"The email address provided is not valid, please check the email address again.\",\n          ErrorTypes.REGISTER_EMAIL\n        );\n      }\n\n      default: {\n        throw new CustomException(errorName, error.message);\n      }\n    }\n  }\n};\n\nexport const validateUserCred = (name, org, email, pwd, confirmPwd) => {\n  const errorName = \"Registration Error\";\n\n  if (!validateName(name)) {\n    throw new CustomException(\n      errorName,\n      \"Please provide a valid name.\",\n      ErrorTypes.REGISTER_NAME\n    );\n  }\n\n  if (!validateOrg(org)) {\n    throw new CustomException(\n      errorName,\n      \"Please enter the organisation that you are representing.\",\n      ErrorTypes.REGISTER_ORG\n    );\n  }\n\n  if (!validateEmailAddr(email)) {\n    throw new CustomException(\n      errorName,\n      \"The email address is not in a valid format.\",\n      ErrorTypes.REGISTER_EMAIL\n    );\n  }\n\n  if (!validatePasswordNotEmpty(pwd, confirmPwd)) {\n    throw new CustomException(\n      errorName,\n      \"Please ensure that your passwords have been filled for both fields.\",\n      ErrorTypes.REGISTER_PWD\n    );\n  }\n\n  if (!validatePasswordMatches(pwd, confirmPwd)) {\n    throw new CustomException(\n      errorName,\n      \"The passwords do not match, please check your passwords again.\",\n      ErrorTypes.REGISTER_PWD\n    );\n  }\n};\n\nconst validateOrg = (org) => {\n  if (org.trim() === \"\") {\n    return false;\n  }\n\n  if (org == null) {\n    return false;\n  }\n\n  if (org === undefined) {\n    return false;\n  }\n\n  return true;\n};\n\nconst validateName = (name) => {\n  if (name.trim() === \"\") {\n    return false;\n  }\n\n  if (name == null) {\n    return false;\n  }\n\n  if (name === undefined) {\n    return false;\n  }\n\n  return true;\n};\n\nconst validateEmailAddr = (email) => {\n  const validEmailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (email.trim() === \"\") {\n    return false;\n  }\n\n  if (email == null) {\n    return false;\n  }\n\n  if (email === undefined) {\n    return false;\n  }\n\n  if (email.search(validEmailRegex) === -1) {\n    return false;\n  }\n\n  return true;\n};\n\nconst validatePasswordNotEmpty = (pwd, confirmPwd) => {\n  if (pwd.trim() === \"\" || confirmPwd.trim() === \"\") {\n    return false;\n  }\n  return true;\n};\n\nconst validatePasswordMatches = (pwd, confirmPwd) => {\n  if (pwd !== confirmPwd) {\n    return false;\n  }\n  return true;\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./styles\";\nimport { validateUserCred, createNewUser } from \"./services\";\nimport { editProfile } from \"services/api/ProjectOwner\";\nimport { ErrorTypes } from \"utils/Error\";\nimport routes from \"routes\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  let history = useHistory();\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [org, setOrg] = useState(\"\");\n  const [emailAddr, setEmailAddr] = useState(\"\");\n  const defaultErrorMsgs = {\n    name: \"\",\n    org: \"\",\n    email: \"\",\n    pwd: \"\",\n  };\n  const [errorMsgs, setErrorMsgs] = useState(defaultErrorMsgs);\n  const [pwd, setPwd] = useState(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [isCreateBtnDisabled, setIsCreateBtnDisabled] = useState(false);\n\n  const createUserBtnDebounce = async () => {\n    try {\n      // Disable the button first\n      setIsCreateBtnDisabled(true);\n      // Validate the credentials\n      validateUserCred(name, org, emailAddr, pwd, confirmPwd);\n      // Create a new user\n      const userIdToken = await createNewUser(emailAddr, pwd);\n      // If successful, update the user's name in the database\n      editProfile({ name, organisation: org, balance: 0 }, userIdToken);\n      // If successful, re-route the user to the dashboard page\n      // NOTE: No need to re-enable the button, no longer relevant as the button will not exist anymore\n      history.push(`${routes.authenticated.url}${routes.dashboard.url}`);\n    } catch (error) {\n      if (error.type === ErrorTypes.REGISTER_PWD) {\n        setErrorMsgs({ ...defaultErrorMsgs, pwd: error.toString() });\n      } else if (error.type === ErrorTypes.REGISTER_NAME) {\n        setErrorMsgs({ ...defaultErrorMsgs, name: error.toString() });\n      } else if (error.type === ErrorTypes.REGISTER_ORG) {\n        setErrorMsgs({ ...defaultErrorMsgs, org: error.toString() });\n      } else {\n        setErrorMsgs({ ...defaultErrorMsgs, email: error.toString() });\n      }\n      // Enable the button if an error was occurred, so the user can try again\n      setIsCreateBtnDisabled(false);\n    }\n  };\n\n  return (\n    <Paper className={classes.paper} variant=\"outlined\">\n      <form className={classes.textFieldRoot}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item className={classes.RegisterTitle}>\n            Register\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              id=\"register-name\"\n              aria-label=\"Name\"\n              label=\"Name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              error={!!errorMsgs.name}\n              helperText={errorMsgs.name}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              id=\"register-org\"\n              aria-label=\"Organisation\"\n              label=\"Organisation\"\n              type=\"text\"\n              value={org}\n              onChange={(e) => {\n                setOrg(e.target.value);\n              }}\n              error={!!errorMsgs.org}\n              helperText={errorMsgs.org}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              id=\"email-addr\"\n              aria-label=\"Email address\"\n              label=\"Email address\"\n              type=\"email\"\n              value={emailAddr}\n              onChange={(e) => {\n                setEmailAddr(e.target.value);\n              }}\n              error={!!errorMsgs.email}\n              helperText={errorMsgs.email}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              id=\"pwd\"\n              aria-label=\"Password\"\n              label=\"Password\"\n              type=\"password\"\n              value={pwd}\n              onChange={(e) => {\n                setPwd(e.target.value);\n              }}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              id=\"confirm-pwd\"\n              aria-label=\"Confirm Password\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              value={confirmPwd}\n              onChange={(e) => {\n                setConfirmPwd(e.target.value);\n              }}\n              error={!!errorMsgs.pwd}\n              helperText={errorMsgs.pwd}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              className={classes.submit}\n              variant=\"contained\"\n              disabled={isCreateBtnDisabled}\n              onClick={createUserBtnDebounce}\n              fullWidth\n            >\n              Create\n            </Button>\n          </Grid>\n          <Grid container direction=\"row\" justify=\"center\" item>\n            <Grid item>\n              <Button\n                onClick={() => {\n                  history.push(routes.login.url);\n                }}\n              >\n                Already have an account?\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Register;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    position: \"fixed\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    scrollBehavior: \"smooth\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport Register from \"components/Register\";\nimport useStyles from \"./styles\";\n\nconst RegisterScene = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Register />\n    </div>\n  );\n};\n\nexport default RegisterScene;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    width: \"100%\",\n    maxWidth: \"25rem\",\n    margin: \"auto\",\n  },\n\n  textFieldRoot: {\n    \"& .MuiTextField-root\": {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","/* global firebase */\nimport { CustomException } from \"utils/Error\";\n\nconst resetUserPassword = async (email) => {\n  try {\n    // Setting the language of the password reset email\n    firebase.auth().useDeviceLanguage();\n    await firebase.auth().sendPasswordResetEmail(email);\n    return true;\n  } catch (error) {\n    const errorName = \"Forgot Password Error\";\n    switch (error.code) {\n      case \"auth/invalid-email\": {\n        throw new CustomException(\n          errorName,\n          \"The email address provided is invalid.\"\n        );\n      }\n\n      case \"auth/missing-continue-uri\": {\n        throw new CustomException(\n          errorName,\n          \"No URL was provided in the password reset request.\"\n        );\n      }\n\n      case \"auth/invalid-continue-uri\": {\n        throw new CustomException(\n          errorName,\n          \"The URL provided in the password reset request is invalid.\"\n        );\n      }\n\n      case \"auth/unauthorized-continue-uri\": {\n        throw new CustomException(\n          errorName,\n          \"The domain of the password reset request URL is not authorized.\"\n        );\n      }\n\n      case \"auth/user-not-found\": {\n        throw new CustomException(\n          errorName,\n          \"There is no user associated with this email address. Unable to reset password.\"\n        );\n      }\n\n      default: {\n        throw new CustomException(\n          errorName,\n          \"A general error has occurred while trying to reset the user's password.\"\n        );\n      }\n    }\n  }\n};\n\nexport default resetUserPassword;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport useStyles from \"./styles\";\nimport resetUserPassword from \"./services/sendPasswordReset\";\n\nconst ForgotPassword = () => {\n  const classes = useStyles();\n\n  const [emailAddr, setEmailAddr] = useState(\"\");\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [isBtnDisabled, setIsBtnDisabled] = useState(false);\n\n  const closeSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsSnackbarOpen(false);\n  };\n\n  const btnDebounce = async () => {\n    try {\n      // Attempt to make a password reset request\n      await resetUserPassword(emailAddr);\n\n      // If successful, we generate a success message to the user\n      setIsSnackbarOpen(true);\n      setErrorMsg(\"\");\n\n      // We disable the button\n      setIsBtnDisabled(true);\n\n      // After a fixed amount of time, we enable the button again\n      setTimeout(() => {\n        setIsBtnDisabled(false);\n      }, 5000);\n    } catch (error) {\n      // Otherwise if there's an error, display the error message to the user\n      setErrorMsg(error.toString());\n    }\n  };\n\n  return (\n    <Paper className={classes.paper} variant=\"outlined\">\n      <form className={classes.textFieldRoot}>\n        <Grid container direction=\"column\" spacing={4}>\n          <Grid item>\n            <Typography variant=\"h5\">Forgot Password</Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              required\n              variant=\"outlined\"\n              id=\"email-addr\"\n              label=\"Email address\"\n              type=\"email\"\n              value={emailAddr}\n              onChange={(e) => {\n                setEmailAddr(e.target.value);\n              }}\n              error={!!errorMsg}\n              helperText={errorMsg}\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={isBtnDisabled}\n              onClick={btnDebounce}\n            >\n              Reset my password\n            </Button>\n          </Grid>\n        </Grid>\n        <Snackbar\n          open={isSnackbarOpen}\n          autoHideDuration={5000}\n          onClose={closeSnackbar}\n        >\n          <MuiAlert\n            elevation={6}\n            variant=\"filled\"\n            onClose={closeSnackbar}\n            severity=\"success\"\n          >\n            Your password reset link has been sent to your email address!\n          </MuiAlert>\n        </Snackbar>\n      </form>\n    </Paper>\n  );\n};\n\nexport default ForgotPassword;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    position: \"fixed\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport ForgotPassword from \"components/ForgotPassword\";\nimport useStyles from \"./styles\";\n\nconst ForgotPasswordScene = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ForgotPassword />\n    </div>\n  );\n};\n\nexport default ForgotPasswordScene;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: \"auto\",\n  },\n\n  welcomeIcon: {\n    float: \"left\",\n    marginLeft: 10,\n    marginRight: 5,\n  },\n\n  welcomeText: {\n    float: \"left\",\n    marginLeft: 5,\n    marginRight: 10,\n  },\n}));\n\nexport default useStyles;\n","/*global firebase*/\nimport Icon from \"@material-ui/core/Icon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./styles\";\nimport { GetUserInfoApi } from \"services/api/ProjectOwner\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\nimport { useEffect, useState } from \"react\";\n\nconst WelcomeIcon = () => {\n  const classes = useStyles();\n  const [userName, setUserName] = useState();\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const retrievedToken = await firebase.auth().currentUser.getIdToken();\n        console.log(retrievedToken);\n        const data = await GetUserInfoApi(retrievedToken);\n        console.log(\"user balance data got from API\");\n        console.log(data);\n        setUserName(data.name);\n      } catch (error) {\n        throw new CustomException(\n          \"Get-user-error\",\n          { error },\n          ErrorTypes.BACKEND_PROFILE\n        );\n      }\n    }\n    getData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Icon className={classes.welcomeIcon}>account_circle</Icon>\n      <Typography className={classes.welcomeText}>\n        Welcome back, {userName}!\n      </Typography>\n    </div>\n  );\n};\n\nexport default WelcomeIcon;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  profileBtn: {\n    marginLeft: 20,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  signOutBtn: {\n    margin: theme.spacing(0, 0, 0),\n    color: \"#ffffff\",\n    backgroundColor: \"#00458B\",\n    fontSize: \"15px\",\n    fontWeight: \"bold\",\n    height: \"30px\",\n    letterSpacing: \"2px\",\n  },\n}));\n\nexport default useStyles;\n","/*global firebase*/\nimport { CustomException, ErrorTypes } from \"utils/Error\";\n\nexport const FirebaseSignout = async () => {\n  await firebase.auth().signOut();\n};\n","import React, { useContext } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport useStyles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport routes from \"routes\";\nimport { FirebaseSignout } from \"./services\";\nimport { SignOutApi } from \"services/api/ProjectOwner\";\n\nfunction Logout() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { userToken } = useContext(AuthContext);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSignOut = async () => {\n    handleClose();\n    await SignOutApi(userToken);\n    await FirebaseSignout();\n    history.push(routes.login);\n  };\n\n  return (\n    <div>\n      <Button className={classes.signOutBtn} onClick={handleClickOpen}>\n        Sign out\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Sign Out\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to sign out?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClose();\n            }}\n            autoFocus\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleSignOut();\n            }}\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Logout;\n","import { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useStyles from \"./styles\";\nimport Logout from \"components/Logout\";\n\nconst ProfileButton = () => {\n  const classes = useStyles();\n  const [anchorEle, setAnchorEle] = useState(null);\n  const open = Boolean(anchorEle);\n\n  const handleMenu = (event) => {\n    setAnchorEle(event.currentTarget);\n  };\n\n  const closeMenu = (event) => {\n    setAnchorEle(null);\n  };\n\n  return (\n    <div className={classes.profileBtn}>\n      <IconButton\n        aria-label=\"dropdown button for options\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        color=\"primary\"\n        onClick={handleMenu}\n      >\n        <Icon>arrow_drop_down</Icon>\n      </IconButton>\n      <Menu\n        getContentAnchorEl={null}\n        id=\"menu-appbar\"\n        anchorEl={anchorEle}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={open}\n        onClose={closeMenu}\n      >\n        <Logout />\n      </Menu>\n    </div>\n  );\n};\n\nexport default ProfileButton;\n","export const DRAWER_WIDTH = 240;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { DRAWER_WIDTH } from \"components/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    width: `calc(100% - ${DRAWER_WIDTH})px`,\n    marginLeft: DRAWER_WIDTH,\n  },\n}));\n\nexport default useStyles;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport WelcomeIcon from \"./WelcomeIcon\";\nimport ProfileButton from \"./ProfileButton\";\nimport useStyles from \"./styles\";\n\nconst Headerbar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n      <Toolbar>\n        <WelcomeIcon />\n        <ProfileButton />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Headerbar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItems: {\n    marginTop: \"2.5rem\",\n  },\n  listIcons: {\n    color: theme.palette.primary.dark,\n  },\n  listItemsText: {\n    color: theme.palette.primary.dark,\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default useStyles;\n","import { useMemo, forwardRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport useStyles from \"./styles\";\n\nconst ListItemLink = (props) => {\n  const classes = useStyles();\n  const { primary, to, iconName } = props;\n\n  const renderLink = useMemo(\n    () =>\n      forwardRef((itemProps, ref) => <Link to={to} ref={ref} {...itemProps} />),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink} className={classes.listItems}>\n        {iconName ? (\n          <ListItemIcon>\n            <Icon className={classes.listIcons}>{iconName}</Icon>\n          </ListItemIcon>\n        ) : null}\n        <ListItemText\n          primary={primary}\n          classes={{ primary: classes.listItemsText }}\n        />\n      </ListItem>\n    </li>\n  );\n};\n\nexport default ListItemLink;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 80,\n    height: \"3rem\",\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.common.white,\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default useStyles;\n","import Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport routes from \"routes\";\nimport useStyles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  return (\n    <Button\n      variant=\"contained\"\n      startIcon={<Icon>add</Icon>}\n      className={classes.btn}\n      onClick={() => {\n        history.push(`${routes.authenticated.url}${routes.createProject.url}`);\n      }}\n    >\n      New Project\n    </Button>\n  );\n};\n\nexport default CreateProjectButton;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { DRAWER_WIDTH } from \"components/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    minWidth: DRAWER_WIDTH,\n    display: \"flex\",\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default useStyles;\n","const navIcons = {\n  Dashboard: \"assessment\",\n  \"Manage Projects\": \"folder\",\n  Profile: \"person\",\n  Balance: \"account_balance_wallet\",\n};\n\nexport default navIcons;\n","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItemLink from \"./ListItemLink\";\nimport CreateProjectButton from \"./CreateProjectBtn\";\nimport useStyles from \"./styles\";\nimport routes from \"../../routes\";\nimport icons from \"./icons\";\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  const navBarRoutes = [\n    routes.dashboard,\n    routes.projects,\n    routes.profile,\n    routes.balance,\n  ];\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      anchor=\"left\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      {/* This is so the content of the Sidebar starts below the App bar */}\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {navBarRoutes.map((route, idx) => (\n          <ListItemLink\n            key={idx}\n            to={`${routes.authenticated.url}${route.url}`}\n            primary={route.title}\n            iconName={icons[route.title]}\n            className={classes.listItems}\n          />\n        ))}\n      </List>\n      <CreateProjectButton />\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: theme.palette.background.default,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"fixed\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"auto\",\n  },\n\n  content: {\n    flexGrow: 1,\n    overflow: \"auto\",\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default useStyles;\n","import React, { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"contexts/auth\";\nimport Headerbar from \"components/Headerbar\";\nimport Sidebar from \"components/Sidebar\";\nimport Loading from \"components/Loading\";\nimport routes from \"routes\";\nimport useStyles from \"./styles\";\n\nconst Authenticated = ({ ProtectedComponent }) => {\n  const classes = useStyles();\n  const { userToken, isLoggingIn } = useContext(AuthContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    // If the user is not in the middle of logging in but there is no user token\n    if (!isLoggingIn && userToken === null) {\n      history.push(routes.login.url);\n      return null;\n    }\n  }, [userToken, isLoggingIn]);\n\n  return userToken === null ? (\n    <Loading />\n  ) : (\n    <div className={classes.root}>\n      <Headerbar />\n      <Sidebar />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <ProtectedComponent />\n      </main>\n    </div>\n  );\n};\n\nexport default Authenticated;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  cards: {\n    width: \"25rem\",\n    height: \"15rem\",\n  },\n\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default useStyles;\n","import { Typography, Card } from \"@material-ui/core\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport useStyles from \"./styles\";\n\nconst DataCard = ({ title, dataValue, displayIcon }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.cards}>\n      <CardHeader\n        classes={{ title: classes.title }}\n        avatar={displayIcon}\n        title={title}\n      />\n      <CardContent>\n        <Typography variant=\"h3\" color=\"textSecondary\">\n          {dataValue}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DataCard;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst DataCardIcon = ({ iconName, iconBackgroundColour }) => {\n  const useStyles = makeStyles((theme) => ({\n    rounded: {\n      color: theme.palette.getContrastText(iconBackgroundColour),\n      backgroundColor: iconBackgroundColour,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Avatar variant=\"rounded\" className={classes.rounded}>\n      <Icon>{iconName}</Icon>\n    </Avatar>\n  );\n};\n\nexport default DataCardIcon;\n","import { useEffect } from \"react\";\nimport useTheme from \"@material-ui/styles/useTheme\";\nimport DataCard from \"../components/DataCard\";\nimport DataCardIcon from \"../components/DataCardIcon\";\n\nconst PaidFunds = ({ fundsAmt }) => {\n  const theme = useTheme();\n  const paidFundsIcon = (\n    <DataCardIcon\n      iconName=\"paid\"\n      iconBackgroundColour={theme.palette.secondary.main}\n    />\n  );\n\n  // Formats the value into the desired readable value\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\",\n  });\n\n  return (\n    <DataCard\n      title=\"Funds Paid Out\"\n      dataValue={formatter.format(fundsAmt)}\n      displayIcon={paidFundsIcon}\n    />\n  );\n};\n\nexport default PaidFunds;\n","import useTheme from \"@material-ui/styles/useTheme\";\nimport DataCard from \"../components/DataCard\";\nimport DataCardIcon from \"../components/DataCardIcon\";\n\nconst HoldingFunds = ({ fundsAmt }) => {\n  const theme = useTheme();\n  const holdingFundsIcon = (\n    <DataCardIcon\n      iconName=\"account_balance\"\n      iconBackgroundColour={theme.palette.secondary.main}\n    />\n  );\n\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\",\n  });\n\n  return (\n    <DataCard\n      title=\"Funds in Holding (To be paid)\"\n      dataValue={formatter.format(fundsAmt)}\n      displayIcon={holdingFundsIcon}\n    />\n  );\n};\n\nexport default HoldingFunds;\n","import { Link } from \"react-router-dom\";\nimport useTheme from \"@material-ui/styles/useTheme\";\nimport DataCard from \"../components/DataCard\";\nimport DataCardIcon from \"../components/DataCardIcon\";\nimport routes from \"routes\";\n\nconst OverallProjects = ({ numProjs }) => {\n  const theme = useTheme();\n  const overallProjsIcon = (\n    <DataCardIcon\n      iconName=\"work\"\n      iconBackgroundColour={theme.palette.secondary.main}\n    />\n  );\n\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"decimal\",\n    maximumFractionDigits: 0,\n  });\n\n  return (\n    <Link\n      style={{ textDecoration: \"none\" }}\n      to={`${routes.authenticated.url}${routes.profile.url}`}\n    >\n      <DataCard\n        title=\"Total Projects Running\"\n        dataValue={formatter.format(numProjs)}\n        displayIcon={overallProjsIcon}\n      />\n    </Link>\n  );\n};\n\nexport default OverallProjects;\n","import useTheme from \"@material-ui/styles/useTheme\";\nimport DataCard from \"../components/DataCard\";\nimport DataCardIcon from \"../components/DataCardIcon\";\n\nconst TotalDataCollected = ({ numRecords }) => {\n  const theme = useTheme();\n  const totalDataIcon = (\n    <DataCardIcon\n      iconName=\"insights\"\n      iconBackgroundColour={theme.palette.secondary.main}\n    />\n  );\n\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"decimal\",\n    maximumFractionDigits: 0,\n  });\n\n  return (\n    <DataCard\n      title=\"Data Collected (Records)\"\n      dataValue={`${formatter.format(numRecords)}`}\n      displayIcon={totalDataIcon}\n    />\n  );\n};\n\nexport default TotalDataCollected;\n","import { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PaidFunds from \"./PaidFunds\";\nimport HoldingFunds from \"./HoldingFunds\";\nimport OverallProjects from \"./OverallProjects\";\nimport TotalDataCollected from \"./TotalDataCollected\";\nimport { GetUserInfoApi } from \"services/api/ProjectOwner\";\n\nconst Dashboard = () => {\n  const { userToken } = useContext(AuthContext);\n  const initDashboardData = {\n    paidFundAmt: 0,\n    holdFundAmt: 0,\n    totalProjs: 0,\n    totalData: 0,\n  };\n  const [dashboardData, setDashboardData] = useState(initDashboardData);\n\n  /**\n   * The reason for having the API calls done here instead of the individual\n   * dashboard components, is because we don't have an API call specifically\n   * for these statistics.\n   *\n   * We need to make a GET call for each of the projects the user has and\n   * amalgamate the values for each statistic we want.\n   *\n   * To save API calls, we perform it once in this parent component, instead\n   * of having each component perform their own set of API calls (repeated).\n   */\n  useEffect(() => {\n    const fetchProjData = async () => {\n      const userProfileData = await GetUserInfoApi(userToken);\n      let updatedDashboardData = { ...initDashboardData, ...{} };\n\n      if (userProfileData !== null && typeof userProfileData !== \"undefined\") {\n        console.log(userProfileData);\n        if (\n          Object.hasOwnProperty.call(userProfileData, \"totalHasFundedMoney\")\n        ) {\n          updatedDashboardData.paidFundAmt =\n            userProfileData.totalHasFundedMoney;\n        }\n\n        if (Object.hasOwnProperty.call(userProfileData, \"balance\")) {\n          updatedDashboardData.holdFundAmt = userProfileData.balance;\n        }\n\n        if (Object.hasOwnProperty.call(userProfileData, \"projects\")) {\n          updatedDashboardData.totalProjs = userProfileData.projects.length;\n        }\n\n        if (\n          Object.hasOwnProperty.call(\n            userProfileData,\n            \"totalAmountDataCollected\"\n          )\n        ) {\n          updatedDashboardData.totalData =\n            userProfileData.totalAmountDataCollected;\n        }\n\n        setDashboardData(updatedDashboardData);\n      }\n    };\n\n    fetchProjData();\n  }, []);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" spacing={3}>\n      <Grid item>\n        <PaidFunds fundsAmt={dashboardData.paidFundAmt} />\n      </Grid>\n      <Grid item>\n        <HoldingFunds fundsAmt={dashboardData.holdFundAmt} />\n      </Grid>\n      <Grid item>\n        <OverallProjects numProjs={dashboardData.totalProjs} />\n      </Grid>\n      <Grid item>\n        <TotalDataCollected numRecords={dashboardData.totalData} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n\n  noProjMsg: {\n    marginTop: 20,\n  },\n\n  loading: {\n    marginTop: 20,\n  },\n  details: {\n    padding: theme.spacing(5),\n    marginTop: \"3rem\",\n    display: \"flex\",\n    flexFlow: \"column wrap\",\n    justifyContent: \"flex-end\",\n    scrollBehavior: \"auto\",\n    width: \"80%\",\n  },\n  backButton: {\n    width: \"20%\",\n    fontSize: \"15px\",\n  },\n  detailsPaper: {\n    margin: \"1rem auto\",\n    padding: theme.spacing(5),\n    backgroundColor: theme.palette.background.paper,\n    maxWidth: \"40rem\",\n    width: \"80%\",\n    borderRadius: \"5px\",\n  },\n  prjTitle: {\n    display: \"flex\",\n    flexFlow: \"column wrap\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    alignContent: \"flex-start\",\n    marginBottom: \"1rem\",\n  },\n  sensors: {\n    display: \"flex\",\n    flexFlow: \"column wrap\",\n    justifyItems: \"flex-start\",\n    // alignContent: \"flex-start\",\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n}));\n\nexport default useStyles;\n","import { GetUserInfoApi, FetchProjectInfo } from \"services/api/ProjectOwner\";\n\nexport const splitProjsCurrAndPast = (projList, researchFieldMap) => {\n  let output = {\n    current: [],\n    past: [],\n  };\n\n  // For each project\n  projList.map((eachProj) => {\n    // We check the project statistics and look if the number of collected records reach the targeted number, for all goals\n    let isProjOver = eachProj.prjStatistic.every((sensor) => {\n      if (sensor.goalNum === 0) {\n        return true;\n      } else {\n        if (sensor.collectedNum >= sensor.goalNum) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    });\n\n    eachProj.prjResearchField = researchFieldMap[eachProj.prjResearchField];\n\n    if (isProjOver) {\n      output.past.push(eachProj);\n    } else {\n      output.current.push(eachProj);\n    }\n  });\n\n  return output;\n};\n\nexport const fetchProjectData = async (userToken) => {\n  // FOR NOW: We fetch the profile information first to get the list of project IDs\n  // FOR NOW: then we make an API call for each of the project IDs to retrieve the information of the project\n\n  const { projects } = await GetUserInfoApi(userToken);\n  // If we get information about the project ID\n  if (\n    typeof projects !== \"undefined\" &&\n    projects !== null &&\n    projects.length > 0\n  ) {\n    // For each of the project IDs, we make an API call\n    const projDetailsPromises = projects.map((projId) => {\n      return FetchProjectInfo(projId, userToken);\n    });\n    const resolvedProjDetails = await Promise.all(projDetailsPromises);\n    return resolvedProjDetails;\n  } else {\n    // Otherwise if there are no project IDs (either unable to retrieve or none at all)\n    // then we return null\n    return null;\n  }\n};\n","import TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport useStyles from \"../styles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport routes from \"routes\";\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { fetchProjectData, splitProjsCurrAndPast } from \"../services\";\nimport { FetchResearchFieldMap } from \"services/api/ProjectOwner\";\nimport Loading from \"components/Loading\";\n\nconst ProjectTable = ({ setProjectDetails }) => {\n  const classes = useStyles();\n  const { userToken } = useContext(AuthContext);\n  const [currTab, setCurrTab] = useState(\"current\");\n  const handleTabChange = (event, newVal) => {\n    setCurrTab(newVal);\n  };\n  const [currProjData, setCurrProjData] = useState(null);\n  const [pastProjData, setPastProjData] = useState(null);\n  const [dataToDisplay, setDataToDisplay] = useState(undefined);\n  const tableHeaders = [\"No.\", \"Title\", \"Research Field(s)\", \"Participants\"];\n\n  // The first time we load this page, we fetch all project-related data\n  useEffect(() => {\n    // We fetch the data from the backend\n    const getProjData = async (userToken) => {\n      const OwnerprojData = await fetchProjectData(userToken);\n      const researchFieldMap = await FetchResearchFieldMap();\n      const { current, past } = splitProjsCurrAndPast(\n        OwnerprojData,\n        researchFieldMap\n      );\n      setCurrProjData(current);\n      setPastProjData(past);\n\n      if (currTab === \"current\") {\n        setDataToDisplay(current);\n      } else if (currTab === \"past\") {\n        setDataToDisplay(past);\n      }\n    };\n\n    getProjData(userToken);\n  }, []);\n\n  useEffect(() => {\n    switch (currTab) {\n      // If the \"Current Projects\" tab is currently selected\n      case \"current\": {\n        // We update the data to display\n        setDataToDisplay(currProjData);\n        break;\n      }\n\n      // If the \"Past Projects\" tab is currently selected\n      case \"past\": {\n        // We update the data to display\n        setDataToDisplay(pastProjData);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }, [currTab]);\n\n  return dataToDisplay === null ? (\n    <Loading />\n  ) : (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      <Grid item>\n        <Tabs value={currTab} onChange={handleTabChange}>\n          <Tab label=\"Current Projects\" value=\"current\" />\n          <Tab label=\"Past Projects\" value=\"past\" />\n        </Tabs>\n      </Grid>\n      <Grid item>\n        <TableContainer className={classes.table}>\n          <Table stickyHeader aria-label=\"header is fixed in table\">\n            <TableHead>\n              <TableRow>\n                {tableHeaders.map((eachHeader, idx) => (\n                  <TableCell key={idx}>{eachHeader}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {dataToDisplay !== null && typeof dataToDisplay !== \"undefined\"\n                ? dataToDisplay.map((eachProj, idx) => (\n                    <TableRow key={idx}>\n                      <TableCell>{idx + 1}</TableCell>\n                      <TableCell>\n                        <Link\n                          // href={\n                          //   routes.authenticated.url + routes.projectDetails.url\n                          // }\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          onClick={() => {\n                            console.log(eachProj);\n                            setProjectDetails(eachProj);\n                            // return <ProjectDetails project={eachProj} />;\n                            // return ProjectDetails(eachProj);\n                          }}\n                        >\n                          {eachProj.prjTitle}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{eachProj.prjResearchField}</TableCell>\n                      <TableCell>{`${eachProj.inprojectparticipantsNum} / ${eachProj.desiredParticipantNumber}`}</TableCell>\n                    </TableRow>\n                  ))\n                : null}\n            </TableBody>\n          </Table>\n          {dataToDisplay === null ? (\n            <div className={classes.loading}>\n              <Skeleton />\n              <Skeleton />\n              <Skeleton />\n            </div>\n          ) : null}\n          {Array.isArray(dataToDisplay) && dataToDisplay.length === 0 ? (\n            <Typography className={classes.noProjMsg}>\n              {`You have no ${currTab} projects at the moment.`}\n            </Typography>\n          ) : null}\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProjectTable;\n","/*global firebase*/\nimport {\n  FetchResearchFieldMap,\n  FetchGenderTypes,\n  FetchSensors,\n  FetchApiRange,\n} from \"services/api/ProjectOwner\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\n\nexport const Validation = () => {};\n\nexport const BindResearch = async () => {\n  try {\n    const data = await FetchResearchFieldMap();\n    console.log(\"data got from API\");\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new CustomException(\n      \"Fetch-research-field-error\",\n      { error },\n      ErrorTypes.FETCH_RESEARCH_FIELDS\n    );\n  }\n};\n\nexport const BindGender = async () => {\n  try {\n    const genderData = await FetchGenderTypes();\n    console.log(\"gender data got from API\");\n    console.log(genderData);\n    return genderData;\n  } catch (error) {\n    throw new CustomException(\n      \"Fetch-gender-types-error\",\n      { error },\n      ErrorTypes.FETCH_GENDER_TYPES\n    );\n  }\n};\n\nexport const BindSensors = async () => {\n  try {\n    const sensorsData = await FetchSensors();\n    console.log(\"sensors data got from API\");\n    console.log(sensorsData);\n    return sensorsData;\n  } catch (error) {\n    throw new CustomException(\n      \"Fetch-sensors-error\",\n      { error },\n      ErrorTypes.FETCH_SENSORS\n    );\n  }\n};\n\nexport const BindApiRange = async () => {\n  try {\n    const apiRange = await FetchApiRange();\n    console.log(\"API range data got from backend\");\n    console.log(apiRange);\n    return apiRange;\n  } catch (error) {\n    throw new CustomException(\n      \"Fetch-api-error\",\n      { error },\n      ErrorTypes.FETCH_API\n    );\n  }\n};\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"auto\",\n    minWidth: \"50rem\",\n    maxWidth: \"85%\",\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    scrollBehavior: \"auto\",\n  },\n  steps: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"3rem\",\n  },\n  instructions: {\n    minWidth: \"70%\",\n    margin: \"auto 2rem\",\n    height: \"auto\",\n    minHeight: \"25rem\",\n  },\n  textBox: {\n    marginTop: \"1.5rem\",\n  },\n  margin: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  date: {\n    width: \"45%\",\n    marginTop: \"1.5rem\",\n  },\n  right: {\n    width: \"25%\",\n    marginTop: \"1.5rem\",\n  },\n  funding: {\n    marginTop: \"1.5rem\",\n    width: \"65%\",\n  },\n  formControl: {\n    marginTop: \"1.5rem\",\n    width: \"100%\",\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  researchPaper: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  btnGroup: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  sensorSetting: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(4),\n  },\n  sensorDrop: {\n    width: \"60%\",\n  },\n  fslider: {\n    width: \"35%\",\n    // marginRight: theme.spacing(1),\n  },\n  sensorAmount: {\n    width: \"15%\",\n  },\n  optionalSetting: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"1rem auto\",\n    width: \"100%\",\n  },\n  optionalPaper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: theme.spacing(2),\n    marginTop: \"0.5rem\",\n    height: \"5rem\",\n    width: \"40%\",\n    backgroundColor: \"rgba(153, 221, 255, 0.4)\",\n    alignItems: \"center\",\n  },\n  optionalSelect: {\n    width: \"50%\",\n  },\n  seriousness: {\n    width: \"30%\",\n  },\n  reviewStep: {\n    marginTop: \"2rem\",\n    width: \"100%\",\n    // maxWidth: \"3em\",\n    display: \"flex\",\n    // flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n  },\n  reviewlines: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    minHeight: \"2.5rem\",\n    height: \"auto\",\n    maxWidth: \"90%\",\n  },\n}));\n\nexport const IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 35,\n    height: 20,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: theme.palette.primary.dark,\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: theme.palette.primary.light,\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 18,\n    height: 18,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport const LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.text.primary,\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n    maxWidth: 400,\n  },\n}))(Tooltip);\n","import { React, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { BindSensors } from \"components/CreateProject/services\";\nimport { LightTooltip } from \"components/CreateProject/styles\";\nimport useStyles from \"../styles\";\nimport PropTypes from \"prop-types\";\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBackIosRounded\";\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\nimport GetAppRoundedIcon from \"@material-ui/icons/GetAppRounded\";\nimport {\n  Box,\n  Typography,\n  Button,\n  Paper,\n  CircularProgress,\n  LinearProgress,\n  IconButton,\n} from \"@material-ui/core\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport Loading from \"components/Loading\";\nimport { LoginApi, DataPreview } from \"services/api/ProjectOwner\";\nimport routes from \"routes\";\n\nexport function ProjectDetails({ projectDetails, setProjectDetails }) {\n  console.log(projectDetails);\n  const classes = useStyles();\n  const [sensorList, setSensorList] = useState([]);\n  const [dataPreview, setDataPreview] = useState();\n  const frequency = [\"Low\", \"Medium\", \"High\"];\n  var i = 0;\n  let history = useHistory();\n\n  function LinearProgressWithLabel(props) {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${parseFloat(\n            props.value\n          ).toFixed(2)}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  async function handlePreview() {\n    // const retrievedToken = await firebase.auth().currentUser.getIdToken();\n    // await LoginApi(retrievedToken);\n    // var copyOfData = await DataPreview(projectDetails._id, retrievedToken);\n    // console.log(copyOfData);\n    // history.push(routes.datadownload + projectDetails._id);\n    //console.log(routes.api.datadownload + projectDetails._id);\n    window.open(routes.api.datadownload + projectDetails._id, \"_parent\");\n  }\n\n  useEffect(() => {\n    async function getData() {\n      setSensorList(await BindSensors());\n    }\n    getData();\n  }, []);\n\n  return (\n    <div className={classes.details}>\n      <Button\n        color=\"secondary\"\n        className={classes.backButton}\n        onClick={() => setProjectDetails(undefined)}\n        startIcon={<ArrowBackIosRoundedIcon />}\n      >\n        Back\n      </Button>\n      <Paper elevation={10} className={classes.detailsPaper}>\n        <div className={classes.prjTitle}>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Project:\n          </Typography>\n          <Typography align=\"left\" variant=\"h6\" color=\"secondary\">\n            {projectDetails.prjTitle}\n          </Typography>\n        </div>\n        <div className={classes.prjTitle}>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Description:\n          </Typography>\n          <Typography align=\"justify\" variant=\"body2\" color=\"secondary\">\n            {projectDetails.prjDescription}\n          </Typography>\n        </div>\n        <div className={classes.prjTitle}>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Start Time:\n          </Typography>\n          <Typography align=\"justify\" variant=\"body2\" color=\"secondary\">\n            {projectDetails.prjStartTime.split(\"T\")[0]}\n          </Typography>\n        </div>\n        <div className={classes.prjTitle}>\n          <Button\n            color=\"secondary\"\n            // className={classes.backButton}\n            variant=\"contained\"\n            // color=\"primary\"\n            onClick={handlePreview}\n            startIcon={<GetAppRoundedIcon fontSize=\"small\" />}\n          >\n            Download Data\n          </Button>\n        </div>\n        <div className={classes.prjTitle}>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Sensors:\n          </Typography>\n        </div>\n        <Paper elevation={0}>\n          {projectDetails.prjStatistic.map((statistic) =>\n            sensorList.map((sensor) => {\n              if (statistic.sensorId == sensor._id) {\n                i++;\n                return (\n                  <Box\n                    display=\"flex\"\n                    alignItems=\"flex-start\"\n                    justifyContent=\"space-between\"\n                  >\n                    <div className={classes.sensors}>\n                      <Typography variant=\"caption\">\n                        Frequency:\n                        {\n                          frequency[\n                            projectDetails.prjRequirements[0].sensors[i - 1]\n                              .minimumFrequency - 1\n                          ]\n                        }\n                      </Typography>\n                      {console.log(\n                        projectDetails.prjRequirements[0].sensors[i - 1]\n                          .minimumFrequency\n                      )}\n                      <Typography variant=\"caption\">{sensor.name}</Typography>\n                      <LinearProgressWithLabel\n                        value={parseFloat(\n                          (statistic.collectedNum / statistic.goalNum) * 100\n                        ).toString()}\n                      />\n                    </div>\n                  </Box>\n                );\n              }\n            })\n          )}\n        </Paper>\n      </Paper>\n    </div>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"contexts/auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ProjectTable from \"./ProjectTable\";\nimport { fetchProjectData, splitProjsCurrAndPast } from \"./services\";\nimport { FetchResearchFieldMap } from \"services/api/ProjectOwner\";\nimport { ProjectDetails } from \"./ProjectDetail/index\";\n\nconst Projects = () => {\n  // const { userToken } = useContext(AuthContext);\n  // const [currTab, setCurrTab] = useState(\"current\");\n  // const handleTabChange = (event, newVal) => {\n  //   setCurrTab(newVal);\n  // };\n  // const [currProjData, setCurrProjData] = useState(null);\n  // const [pastProjData, setPastProjData] = useState(null);\n  // const [dataToDisplay, setDataToDisplay] = useState(undefined);\n  const [projectDetails, setProjectDetails] = useState(undefined);\n  const steps = [\"Project List\", \"Project Details\"];\n\n  // // The first time we load this page, we fetch all project-related data\n  // useEffect(() => {\n  //   // We fetch the data from the backend\n  //   const getProjData = async (userToken) => {\n  //     const projData = await fetchProjectData(userToken);\n  //     const researchFieldMap = await FetchResearchFieldMap();\n  //     const { current, past } = splitProjsCurrAndPast(\n  //       projData,\n  //       researchFieldMap\n  //     );\n  //     setCurrProjData(current);\n  //     setPastProjData(past);\n\n  //     if (currTab === \"current\") {\n  //       setDataToDisplay(current);\n  //     } else if (currTab === \"past\") {\n  //       setDataToDisplay(past);\n  //     }\n  //   };\n\n  //   getProjData(userToken);\n  // }, []);\n\n  // useEffect(() => {\n  //   switch (currTab) {\n  //     // If the \"Current Projects\" tab is currently selected\n  //     case \"current\": {\n  //       // We update the data to display\n  //       setDataToDisplay(currProjData);\n  //       break;\n  //     }\n\n  //     // If the \"Past Projects\" tab is currently selected\n  //     case \"past\": {\n  //       // We update the data to display\n  //       setDataToDisplay(pastProjData);\n  //       break;\n  //     }\n\n  //     default:\n  //       break;\n  //   }\n  // }, [currTab]);\n\n  function getStepContent(step) {\n    //step component from material ui\n    switch (step) {\n      case 0:\n        return (\n          <BasicSetting setBasicData={setBasicData} basicData={basicData} />\n        );\n      case 1:\n        return (\n          <SensorSetting\n            setSensorData={setSensorData}\n            sensorData={sensorData}\n          />\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={5}\n    >\n      {projectDetails == undefined ? (\n        <ProjectTable setProjectDetails={setProjectDetails} />\n      ) : (\n        <ProjectDetails\n          projectDetails={projectDetails}\n          setProjectDetails={setProjectDetails}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default Projects;\n","/*global firebase*/\nimport {\n  GetUserInfoApi,\n  FetchResearchFieldMap,\n} from \"services/api/ProjectOwner\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\n\nexport const BindInfo = async () => {\n  try {\n    const retrievedToken = await firebase.auth().currentUser.getIdToken();\n    console.log(\"idtoken:\" + retrievedToken);\n    const data = await GetUserInfoApi(retrievedToken);\n    console.log(\"data got from API\");\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new CustomException(\n      \"profile-info-binding-error\",\n      { error },\n      ErrorTypes.BIND_PROFILE\n    );\n  }\n};\n\nexport const BindResearch = async () => {\n  try {\n    console.log(\"inside BindingResearch\");\n    const researchData = await FetchResearchFieldMap();\n    console.log(\"Research data got from API\");\n    console.log(researchData);\n    return researchData;\n  } catch (error) {\n    throw new CustomException(\n      \"Fetch-research-field-error\",\n      { error },\n      ErrorTypes.FETCH_RESEARCH_FIELDS\n    );\n  }\n};\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Badge } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  profileBox: {\n    height: \"auto\",\n    maxWidth: \"70%\",\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing(3),\n  },\n  leftBox: {\n    width: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n  },\n  rightBox: {\n    maxWidth: \"25rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    marginLeft: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  profileTitle: {\n    color: theme.palette.primary.light,\n    marginTop: \"0.5rem\",\n    marginBottom: \"0.5rem\",\n    fontSize: \"1.5rem\",\n    letterSpacing: \"3px\",\n    fontWeight: \"bolder\",\n  },\n  largeAvatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    marginBottom: theme.spacing(3),\n  },\n  FixedInfo: {\n    marginBottom: \"1rem\",\n    color: theme.palette.text.primary,\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n  },\n\n  formControl: {\n    width: \"100%\",\n  },\n  textBox: {\n    marginBottom: \"2rem\",\n  },\n\n  researchPaper: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chips: {\n    maxWidth: \"25rem\",\n  },\n\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 1),\n    color: \"#ffffff\",\n    backgroundColor: \"#3FD2C7\",\n    fontSize: \"20px\",\n    fontWeight: \"bolder\",\n    height: \"50px\",\n    letterSpacing: \"5px\",\n  },\n}));\n\nexport const StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.background.paper,\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}))(Badge);\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { LoginApi, editProfile } from \"services/api/ProjectOwner\";\nimport {\n  Button,\n  Box,\n  FormControl,\n  InputLabel,\n  Chip,\n  TextField,\n  Avatar,\n  Select,\n  MenuItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { BindInfo, BindResearch } from \"./services\";\nimport { useStyles, StyledBadge } from \"./styles\";\nimport { ErrorTypes } from \"utils/Error\";\nimport Loading from \"components/Loading\";\nimport { IconButton } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport routes from \"routes\";\nimport Swal from \"sweetalert2\";\n\nfunction Profile() {\n  const classes = useStyles();\n  const [fields, setField] = useState([]);\n  const [values, setValues] = useState({\n    email: \"email\",\n    name: \"\",\n    organisation: \"\",\n    phoneNum: \"\",\n    researchFields: [],\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [load, setLoad] = useState(true);\n  let history = useHistory();\n\n  const ProfileIconButton = () => {\n    return (\n      <IconButton aria-label=\"edit\">\n        <EditIcon fontSize=\"small\" />\n      </IconButton>\n    );\n  };\n\n  const handleErrors = (error) => {\n    setErrors([error]);\n  };\n\n  const BindingAllInfo = async (data) => {\n    if (data.researchFields) {\n      setValues({\n        email: data._id,\n        name: data.name,\n        phoneNum: data.phoneNum,\n        organisation: data.organisation,\n        researchFields: data.researchFields,\n      });\n    } else {\n      setValues({\n        email: data._id,\n        name: data.name,\n        phoneNum: data.phoneNum,\n        organisation: data.organisation,\n        researchFields: [],\n      });\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const validateInput = () => {\n    if (\n      values.name === \"\" ||\n      values.phoneNum === \"\" ||\n      values.researchFields.length === 0\n    ) {\n      handleErrors(\"Please fill in all the required fields.\");\n      return false;\n    }\n\n    //mobile validation\n    return true;\n  };\n\n  const handleSubmit = async () => {\n    setErrors([]);\n    if (validateInput()) {\n      try {\n        console.log(values);\n        //update\n        const retrievedToken = await firebase.auth().currentUser.getIdToken();\n        // Make API call to backend for creating a session\n        await LoginApi(retrievedToken);\n        editProfile(values, retrievedToken);\n        //notification\n        Swal.fire({\n          title: \"Congrats!\",\n          text: \"Your profile has been updated!\",\n          // icon: \"success\",\n        });\n        history.push(`${routes.authenticated.url}${routes.profile.url}`);\n      } catch (error) {\n        handleErrors([]);\n        if (error.type === ErrorTypes.BACKEND_PROFILE) {\n          handleErrors([error.toString()]);\n        } else {\n          handleErrors([error.toString()]);\n        }\n      }\n    }\n  };\n\n  //get current information\n  useEffect(() => {\n    async function getData() {\n      //bind research fields\n      const ReseachData = await BindResearch();\n      console.log(\"have data\");\n      //put values into an array\n      var valueArray = Object.values(ReseachData);\n      //put the keys into an array\n      var keyArray = Object.keys(ReseachData);\n      //the number of the object elements\n      var count = Object.keys(ReseachData).length;\n      await setField([]);\n      for (var i = 0; i < count; i++) {\n        setField((field) => [\n          ...field,\n          { key: parseInt(keyArray[i]), value: valueArray[i] },\n        ]);\n      }\n      //bind profile data\n      const data = await BindInfo();\n\n      if (data) {\n        // console.log(\"have two types of data\");\n        BindingAllInfo(data);\n        setLoad(false);\n      }\n    }\n    getData();\n  }, []);\n\n  return load ? (\n    <Loading />\n  ) : (\n    <Container className={classes.profileBox}>\n      <Box className={classes.leftBox}>\n        <div className={classes.profileTitle}>Profile</div>\n\n        <StyledBadge\n          color=\"primary\"\n          overlap=\"circle\"\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          badgeContent={<ProfileIconButton />}\n        >\n          <Avatar className={classes.largeAvatar}>\n            {values.name.charAt(0).toUpperCase()}\n          </Avatar>\n        </StyledBadge>\n        <div className={classes.FixedInfo}>{values.email}</div>\n        <div className={classes.FixedInfo}>{values.organisation}</div>\n      </Box>\n      <Box className={classes.rightBox}>\n        <div>\n          {errors.length > 0 &&\n            errors.map((error) => {\n              return <Alert severity=\"error\">{error}</Alert>;\n            })}\n        </div>\n        <form className={classes.profileForm}>\n          <TextField\n            className={classes.textBox}\n            type=\"text\"\n            variant=\"standard\"\n            required\n            fullWidth\n            label=\"Name\"\n            autoFocus\n            value={values.name}\n            onChange={handleChange(\"name\")}\n          />\n          <TextField\n            className={classes.textBox}\n            type=\"text\"\n            variant=\"standard\"\n            required\n            fullWidth\n            label=\"Mobile number\"\n            value={values.phoneNum}\n            onChange={handleChange(\"phoneNum\")}\n          />\n          <FormControl\n            required\n            variant=\"standard\"\n            className={classes.formControl}\n          >\n            <InputLabel>Research Field</InputLabel>\n            <Select\n              id=\"research-selector\"\n              multiple\n              value={values.researchFields}\n              onChange={handleChange(\"researchFields\")}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value) =>\n                    fields.map((field) => {\n                      if (value === field.key)\n                        return (\n                          <Chip\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            key={value}\n                            label={field.value}\n                            className={classes.chip}\n                          />\n                        );\n                    })\n                  )}\n                </div>\n              )}\n            >\n              {fields.map((field) => (\n                <MenuItem key={field.key} value={field.key}>\n                  <ListItemText primary={field.value} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            update\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\nimport { useStyles, LightTooltip } from \"../styles\";\n\nexport function Seriousness({ currentSeriousness, getValue }) {\n  const classes = useStyles();\n  return (\n    <LightTooltip\n      title=\"Choose how related this factor affects your matchmaking (from 1 to 5, 5 is the most).\"\n      arrow\n    >\n      <FormControl variant=\"standard\" className={classes.seriousness}>\n        <InputLabel id=\"seriousness-select\">Level</InputLabel>\n        <Select\n          label=\"seriousness\"\n          defaultValue=\"5\"\n          value={currentSeriousness}\n          onChange={(e) => {\n            getValue(parseInt(e.target.value));\n          }}\n        >\n          <MenuItem value=\"1\">1</MenuItem>\n          <MenuItem value=\"2\">2</MenuItem>\n          <MenuItem value=\"3\">3</MenuItem>\n          <MenuItem value=\"4\">4</MenuItem>\n          <MenuItem value=\"5\">5</MenuItem>\n        </Select>\n      </FormControl>\n    </LightTooltip>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles, IOSSwitch, LightTooltip } from \"../styles\";\nimport { BindGender, BindApiRange } from \"../services\";\nimport { Seriousness } from \"./Seriousness\";\n\nimport {\n  Divider,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  ListItemText,\n  Typography,\n  Slider,\n  Grid,\n  Paper,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nexport function DemographicSetting({ setOptionalData, optionalData }) {\n  const classes = useStyles();\n  const [genderSelector, setGenderSelector] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [load, setLoad] = useState(true);\n  const handleErrors = (error) => {\n    setErrors({ ...error, errors: error });\n  };\n  const [min, setMin] = useState();\n  const [max, setMax] = useState();\n\n  const handleChangeApiRange = (event, newValue) => {\n    let copyofAndroidAPIPrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.AndroidAPIPrjRequirement)\n    );\n    copyofAndroidAPIPrjRequirement.minAPILevel = newValue[0];\n    copyofAndroidAPIPrjRequirement.maxAPILevel = newValue[1];\n    setOptionalData({\n      ...optionalData,\n      AndroidAPIPrjRequirement: copyofAndroidAPIPrjRequirement,\n    });\n  };\n\n  //gender seriousness value getting\n  const handleGenderSeriousness = (seriousnessValue) => {\n    let copyOfGenderPrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.GenderPrjRequirement)\n    );\n    copyOfGenderPrjRequirement.seriousness = seriousnessValue;\n    setOptionalData({\n      ...optionalData,\n      GenderPrjRequirement: copyOfGenderPrjRequirement,\n    });\n  };\n\n  const handleGenderChanges = (event) => {\n    if (event.target.value !== \"\") {\n      let copyOfGenderPrjRequirement = JSON.parse(\n        JSON.stringify(optionalData.GenderPrjRequirement)\n      );\n      copyOfGenderPrjRequirement.gender = event.target.value;\n      setOptionalData({\n        ...optionalData,\n        GenderPrjRequirement: copyOfGenderPrjRequirement,\n      });\n    }\n  };\n\n  //OS seriousness value getting\n  const handleOSSeriousness = (seriousnessValue) => {\n    let copyOfMobileSystemPrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.MobileSystemPrjRequirement)\n    );\n    copyOfMobileSystemPrjRequirement.seriousness = seriousnessValue;\n    setOptionalData({\n      ...optionalData,\n      MobileSystemPrjRequirement: copyOfMobileSystemPrjRequirement,\n    });\n  };\n\n  //Device seriousness value getting\n  const handleDeviceSeriousness = (seriousnessValue) => {\n    let copyOfMobileDeviceTypePrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.MobileDeviceTypePrjRequirement)\n    );\n    copyOfMobileDeviceTypePrjRequirement.seriousness = seriousnessValue;\n    setOptionalData({\n      ...optionalData,\n      MobileDeviceTypePrjRequirement: copyOfMobileDeviceTypePrjRequirement,\n    });\n  };\n\n  const handleDeviceChanges = (event) => {\n    if (event.target.value !== \"\") {\n      let copyOfMobileDeviceTypePrjRequirement = JSON.parse(\n        JSON.stringify(optionalData.MobileDeviceTypePrjRequirement)\n      );\n      copyOfMobileDeviceTypePrjRequirement.mobileDeviceTypes =\n        event.target.value;\n      setOptionalData({\n        ...optionalData,\n        MobileDeviceTypePrjRequirement: copyOfMobileDeviceTypePrjRequirement,\n      });\n    }\n  };\n\n  //API seriousness value getting\n  const handleAPISeriousness = (seriousnessValue) => {\n    let copyOfAndroidAPIPrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.AndroidAPIPrjRequirement)\n    );\n    copyOfAndroidAPIPrjRequirement.seriousness = seriousnessValue;\n    setOptionalData({\n      ...optionalData,\n      AndroidAPIPrjRequirement: copyOfAndroidAPIPrjRequirement,\n    });\n  };\n\n  const handleAPIChanges = (event, value) => {\n    let copyOfAndroidAPIPrjRequirement = JSON.parse(\n      JSON.stringify(optionalData.AndroidAPIPrjRequirement)\n    );\n    copyOfAndroidAPIPrjRequirement.minAPILevel = parseInt(value[0]);\n    copyOfAndroidAPIPrjRequirement.maxAPILevel = parseInt(value[1]);\n    setOptionalData({\n      ...optionalData,\n      AndroidAPIPrjRequirement: copyOfAndroidAPIPrjRequirement,\n    });\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const genderData = await BindGender();\n      console.log(\"gender\");\n      console.log(genderData);\n      const apiData = await BindApiRange();\n      console.log(apiData);\n      var l = apiData.length - 1;\n      setMin(apiData[0]);\n      setMax(apiData[l]);\n      var genderValues = Object.values(genderData);\n      var generKeys = Object.keys(genderData);\n      await setGenderSelector([]);\n      for (var j = 0; j < Object.keys(genderData).length; j++) {\n        setGenderSelector((selector) => [\n          ...selector,\n          { key: generKeys[j], value: genderValues[j] },\n        ]);\n      }\n      setLoad(false);\n    }\n    getData();\n  }, []);\n\n  return load ? (\n    <CircularProgress color=\"secondary\" />\n  ) : (\n    <div>\n      <div id=\"matchmaking-setting\" className={classes.optionalSetting}>\n        {/* Matchmaking toggle */}\n        <LightTooltip\n          title=\"By turning it on, your project will be sent to matching-users according to your setting.\"\n          arrow\n        >\n          <Typography variant=\"body1\" color=\"secondary\">\n            Matchmaking\n          </Typography>\n        </LightTooltip>\n        <FormControlLabel\n          control={\n            <IOSSwitch\n              checked={true}\n              // onChange={handleChange}  //change the toggle status\n              name=\"Matchmaking\"\n            />\n          }\n        />\n      </div>\n      <Divider />\n      <div className={classes.optionalSetting}>\n        <Typography color=\"textPrimary\" variant=\"overline\">\n          (Settings below are optional, it will affect your matchmaking\n          results.)\n        </Typography>\n        <div className={classes.optionalSetting}>\n          <Paper id=\"gender-paper\" className={classes.optionalPaper}>\n            <FormControl variant=\"standard\" className={classes.optionalSelect}>\n              <InputLabel id=\"gender-select\">Gender</InputLabel>\n              <Select\n                multiple\n                value={optionalData.GenderPrjRequirement.genders}\n                onChange={handleGenderChanges}\n                label=\"gender\"\n                renderValue={(selected) => (\n                  <div>\n                    {selected.map((value) =>\n                      genderSelector.map((gender) => {\n                        if (parseInt(value) === gender.value)\n                          return <div>{gender.key}</div>;\n                      })\n                    )}\n                  </div>\n                )}\n              >\n                <MenuItem value=\"\">All</MenuItem>\n                {genderSelector.map((gender) => (\n                  <MenuItem key={gender.value} value={parseInt(gender.value)}>\n                    {gender.key}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Seriousness\n              currentSeriousness={optionalData.GenderPrjRequirement.seriousness}\n              getValue={handleGenderSeriousness}\n            />\n          </Paper>\n          <Paper id=\"OS-paper\" className={classes.optionalPaper}>\n            <FormControl\n              disabled\n              variant=\"standard\"\n              className={classes.optionalSelect}\n            >\n              <InputLabel id=\"OS-select-disabled\">Operation System</InputLabel>\n              <Select label=\"OS\" defaultValue=\"Android\">\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem selected value=\"Android\">\n                  Android\n                </MenuItem>\n              </Select>\n            </FormControl>\n            <Seriousness\n              currentSeriousness={\n                optionalData.MobileSystemPrjRequirement.seriousness\n              }\n              getValue={handleOSSeriousness}\n            />\n          </Paper>\n          <Paper id=\"Devices-paper\" className={classes.optionalPaper}>\n            <FormControl variant=\"standard\" className={classes.optionalSelect}>\n              <InputLabel id=\"device-select\">Devices</InputLabel>\n              <Select\n                value={\n                  optionalData.MobileDeviceTypePrjRequirement.mobileDeviceTypes\n                }\n                label=\"devices\"\n                multiple\n                onChange={handleDeviceChanges}\n              >\n                <MenuItem value=\"\">All</MenuItem>\n                <MenuItem value=\"Mobile Phone\">Mobile Phone</MenuItem>\n                <MenuItem value=\"Wearable Device\">Wearable Device</MenuItem>\n              </Select>\n            </FormControl>\n\n            <Seriousness\n              currentSeriousness={\n                optionalData.MobileDeviceTypePrjRequirement.seriousness\n              }\n              getValue={handleDeviceSeriousness}\n            />\n          </Paper>\n          <Paper id=\"Andriod-API-paper\" className={classes.optionalPaper}>\n            <div className={classes.optionalSelect}>\n              <Typography\n                id=\"API-select\"\n                color=\"textSecondary\"\n                align=\"left\"\n                variant=\"caption\"\n                display=\"block\"\n              >\n                API Version Range\n              </Typography>\n              <Slider\n                value={[\n                  optionalData.AndroidAPIPrjRequirement.minAPILevel,\n                  optionalData.AndroidAPIPrjRequirement.maxAPILevel,\n                ]}\n                aria-labelledby=\"api-range-slider\"\n                valueLabelDisplay=\"auto\"\n                onChange={handleAPIChanges}\n                min={min}\n                max={max}\n              />\n            </div>\n            <Seriousness\n              currentSeriousness={\n                optionalData.AndroidAPIPrjRequirement.seriousness\n              }\n              getValue={handleAPISeriousness}\n            />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  OutlinedInput,\n  Divider,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  List,\n  ListItem,\n  ListItemText,\n  FormHelperText,\n  IconButton,\n  Slider,\n  Fab,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useStyles, LightTooltip } from \"../styles\";\nimport { BindSensors } from \"../services\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\nimport { TextField } from \"@material-ui/core\";\n\nexport function SensorSetting({ setSensorData, sensorData }) {\n  const classes = useStyles();\n  const [errors, setErrors] = useState([]);\n  const sensorFrequency = [\n    {\n      value: 1,\n      label: \"Low\",\n    },\n    {\n      value: 2,\n      label: \"medium\",\n    },\n    {\n      value: 3,\n      label: \"High\",\n    },\n  ];\n\n  let newSensor = {\n    sensorId: \"\",\n    sensorName: \"\",\n    minimumFrequency: 1,\n    frequencyLevel: \"\",\n    recordsNum: 0,\n  };\n  // const [newSensor, setNewSensor] = useState({\n  //   sensorId: \"\",\n  //   sensorName: \"\",\n  //   minimumFrequency: 1,\n  //   frequencyLevel: \"\",\n  //   recordsNum: 0,\n  // });\n  const [sensorSelector, setSensorSelector] = useState([]);\n\n  const handleNewSensor = (prop) => (event) => {\n    switch (prop) {\n      case \"sensorId\":\n        newSensor.sensorId = event.target.value[0];\n        newSensor.sensorName = event.target.value[1];\n        // setNewSensor({\n        //   ...newSensor,\n        //   sensorId: event.target.value[0],\n        //   sensorName: event.target.value[1],\n        // });\n        break;\n      case \"minimumFrequency\":\n        newSensor.minimumFrequency = parseInt(event.target.value[0]);\n        newSensor.frequencyLevel = event.target.value[1];\n        // setNewSensor({\n        //   ...newSensor,\n        //   minimumFrequency: event.target.value[0],\n        //   frequencyLevel: event.target.value[1],\n        // });\n        break;\n      case \"recordsNum\":\n        newSensor.recordsNum = parseInt(event.target.value);\n        // setNewSensor({ ...newSensor, recordsNum: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleErrors = (error) => {\n    setErrors([error]);\n  };\n\n  const handleDelete = (index) => () => {\n    console.log(index);\n    let copy = JSON.parse(JSON.stringify(sensorData));\n    copy.splice(index, 1);\n    console.log(copy);\n    setSensorData(copy);\n  };\n\n  const CheckList = () => {\n    let result = true;\n    for (let i = 0; i < sensorData.length; i++) {\n      if (\n        sensorData[i].sensorId === newSensor.sensorId\n        // &&\n        // sensorData[i].minimumFrequency === newSensor.minimumFrequency\n      ) {\n        result = false;\n        break;\n      }\n    }\n    console.log(\"result\");\n    console.log(result);\n    return result;\n  };\n\n  const handleSensors = () => {\n    setErrors([]);\n    if (newSensor.sensorId !== \"\") {\n      // if (newSensor.recordsNum > 0) {\n      if (newSensor.minimumFrequency > -1) {\n        if (CheckList()) {\n          console.log(newSensor);\n          const stateCopy = JSON.parse(JSON.stringify(sensorData));\n          stateCopy.push(newSensor);\n          setSensorData(stateCopy);\n          console.log(sensorData);\n        } else {\n          handleErrors(\"You have already chose this setting.\");\n        }\n      } else {\n        handleErrors(\"You must choose a frequency for the sensor.\");\n      }\n      // } else {\n      //   handleErrors(\"the record number must be more than 0.\");\n      // }\n    } else {\n      handleErrors(\"you must choose a sensor.\");\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      setSensorSelector(await BindSensors());\n      //console.log(sensorSelector);\n    }\n    getData();\n  }, []);\n  return (\n    <div>\n      {errors.length > 0 &&\n        errors.map((error) => {\n          return <Alert severity=\"error\">{error}</Alert>;\n        })}\n      <div id=\"sensor setting\" className={classes.sensorSetting}>\n        <FormControl\n          id=\"sensor-control\"\n          required\n          variant=\"outlined\"\n          className={classes.sensorDrop}\n        >\n          <InputLabel>Select Sensor</InputLabel>\n          <Select\n            id=\"sensor-selector\"\n            // value={[newSensor.sensorId, newSensor.sensorName]}\n            onChange={handleNewSensor(\"sensorId\")}\n            labelWidth={120}\n          >\n            {sensorSelector.map((sensor) => (\n              <MenuItem key={sensor._id} value={[sensor._id, sensor.name]}>\n                {sensor.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl\n          id=\"sensor-frequency\"\n          required\n          variant=\"outlined\"\n          className={classes.fslider}\n        >\n          <InputLabel>Frequency</InputLabel>\n          <Select\n            id=\"frequency-selector\"\n            onChange={handleNewSensor(\"minimumFrequency\")}\n            labelWidth={90}\n          >\n            <MenuItem key={1} value={[\"1\", \"Low\"]}>\n              Low\n            </MenuItem>\n            <MenuItem key={2} value={[\"2\", \"Medium\"]}>\n              Medium\n            </MenuItem>\n            <MenuItem key={3} value={[\"3\", \"High\"]}>\n              High\n            </MenuItem>\n          </Select>\n        </FormControl>\n        {/* <LightTooltip title=\"What is goal?\" arrow>\n          <TextField\n            variant=\"outlined\"\n            label=\"Goal\"\n            required\n            className={classes.sensorAmount}\n            id=\"sensorGoal\"\n            type=\"number\"\n            defaultValue=\"0\"\n            onChange={handleNewSensor(\"recordsNum\")}\n            inputProps={{ min: 1 }}\n          />\n        </LightTooltip> */}\n      </div>\n      <Fab\n        size=\"small\"\n        color=\"secondary\"\n        aria-label=\"add-sensor\"\n        onClick={handleSensors}\n      >\n        <AddIcon />\n      </Fab>\n      <Divider />\n      <div>\n        <List>\n          {sensorData.map((tSensor) => (\n            <ListItem>\n              <ListItemText\n                primary={tSensor.sensorName}\n                secondary={\"Frequency: \" + tSensor.frequencyLevel}\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={handleDelete(sensorData.indexOf(tSensor))}\n                >\n                  <HighlightOffRoundedIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n}\n","/*global firebase*/\nimport { GetUserInfoApi } from \"services/api/ProjectOwner\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\n\nexport const BindBalance = async () => {\n  try {\n    const retrievedToken = await firebase.auth().currentUser.getIdToken();\n    const data = await GetUserInfoApi(retrievedToken);\n    console.log(\"user balance data got from API\");\n    console.log(data);\n    return data.balance;\n  } catch (error) {\n    throw new CustomException(\n      \"Get-user-error\",\n      { error },\n      ErrorTypes.BACKEND_PROFILE\n    );\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles, LightTooltip } from \"../styles\";\nimport { BindResearch } from \"../services\";\nimport { BindBalance } from \"components/Balance/services\";\nimport Loading from \"components/Loading\";\nimport {\n  TextField,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  ListItemText,\n  InputAdornment,\n  Link,\n  CircularProgress,\n  FormHelperText,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport routes from \"routes\";\n\nexport function BasicSetting({ setBasicData, basicData }) {\n  const classes = useStyles();\n  const [fields, setField] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const todayDate = new Date().toLocaleDateString(\"en-CA\");\n  const [load, setLoad] = useState(true);\n  const [currentBalance, setCurrentBalance] = useState();\n\n  const handleErrors = (error) => {\n    setErrors({ ...error, errors: error });\n  };\n\n  const handleChange = (prop) => (dataType) => (event) => {\n    switch (dataType) {\n      case \"float\":\n        if (parseFloat(event.target.value) <= currentBalance) {\n          if (parseFloat(event.target.value) > 0) {\n            return setBasicData({\n              ...basicData,\n              [prop]: parseFloat(event.target.value),\n            });\n          } else {\n            handleErrors(\"Please type the right amount of funding.\");\n          }\n        } else handleErrors(\"Please top up your balance first.\");\n        break;\n      case \"bool\":\n        return setBasicData({ ...basicData, [prop]: event.target.checked });\n        break;\n      case \"\":\n        return setBasicData({ ...basicData, [prop]: event.target.value });\n        break;\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const ReseachData = await BindResearch();\n      console.log(\"have data\");\n      //put values into an array\n      var valueArray = Object.values(ReseachData);\n      //put the keys into an array\n      var keyArray = Object.keys(ReseachData);\n      //the number of the object elements\n      var count = Object.keys(ReseachData).length;\n      var balance = await BindBalance();\n      setCurrentBalance(balance.toFixed(2));\n      await setField([]);\n      for (var i = 0; i < count; i++) {\n        setField((field) => [\n          ...field,\n          { key: parseInt(keyArray[i]), value: valueArray[i] },\n        ]);\n      }\n      setLoad(false);\n    }\n    getData();\n  }, []);\n  return load ? (\n    <CircularProgress color=\"secondary\" />\n  ) : (\n    <div>\n      <TextField\n        className={classes.textBox}\n        type=\"text\"\n        id=\"project-title\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        label=\"Project Title\"\n        value={basicData.prjTitle}\n        onChange={handleChange(\"prjTitle\")(\"\")}\n        inputProps={{ maxLength: 100 }}\n      />\n      <TextField\n        className={classes.textBox}\n        id=\"project-description\"\n        variant=\"outlined\"\n        multiline\n        rows={4}\n        label=\"Description\"\n        required\n        fullWidth\n        value={basicData.prjDescription}\n        onChange={handleChange(\"prjDescription\")(\"\")}\n        inputProps={{ maxLength: 400 }}\n      />\n      <div className={classes.margin}>\n        <FormControl variant=\"outlined\" required className={classes.date}>\n          <InputLabel>Start Date</InputLabel>\n          <OutlinedInput\n            type=\"date\"\n            inputProps={{ min: todayDate }}\n            value={new Date(basicData.prjStartTime).toLocaleDateString(\"en-CA\")}\n            onChange={handleChange(\"prjStartTime\")(\"\")}\n            labelWidth={80}\n          />\n        </FormControl>\n        <FormControl variant=\"outlined\" required className={classes.right}>\n          <InputLabel>Duration</InputLabel>\n          <OutlinedInput\n            type=\"number\"\n            value={basicData.prjDuration}\n            inputProps={{ min: 1 }}\n            onChange={handleChange(\"prjDuration\")(\"\")}\n            endAdornment={<InputAdornment position=\"end\">Days</InputAdornment>}\n            labelWidth={70}\n          />\n        </FormControl>\n        <FormControl variant=\"outlined\" required className={classes.right}>\n          <InputLabel>Participants</InputLabel>\n          <OutlinedInput\n            type=\"number\"\n            value={basicData.prjParticipantsNum}\n            inputProps={{ min: 1 }}\n            onChange={handleChange(\"prjParticipantsNum\")(\"\")}\n            endAdornment={<InputAdornment position=\"end\">PPL</InputAdornment>}\n            labelWidth={90}\n          />\n        </FormControl>\n      </div>\n      <div className={classes.margin}>\n        <FormControl\n          variant=\"outlined\"\n          required\n          className={classes.funding}\n          fullWidth\n        >\n          <InputLabel htmlFor=\"outlined-adornment-funding\">Funding</InputLabel>\n          <OutlinedInput\n            type=\"number\"\n            value={basicData.prjFunding}\n            inputProps={{ max: currentBalance, min: 1 }}\n            onChange={handleChange(\"prjFunding\")(\"float\")}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n            endAdornment={<InputAdornment position=\"end\">AUD</InputAdornment>}\n            labelWidth={70}\n          />\n          <FormHelperText id=\"outlined-helper-text\">\n            Current balance:{currentBalance} AUD\n          </FormHelperText>\n        </FormControl>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={basicData.isFullRedeemOnly}\n              onChange={handleChange(\"isFullRedeemOnly\")(\"bool\")}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"No partial rewards\"\n        />\n\n        {/* <LightTooltip\n          title=\"This number means how many points is equals to 1 dollar, e.g.: 10 means 10 points = 1 AUD.\"\n          arrow\n        >\n          <FormControl variant=\"outlined\" required className={classes.date}>\n            <FormHelperText>Conversion Rate</FormHelperText>\n            <OutlinedInput\n              type=\"number\"\n              value={basicData.conversionRate}\n              onChange={handleChange(\"conversionRate\")(\"int\")}\n            />\n          </FormControl>\n        </LightTooltip> */}\n      </div>\n\n      <FormControl required variant=\"outlined\" className={classes.formControl}>\n        <InputLabel>Research Field</InputLabel>\n        <Select\n          id=\"research-selector\"\n          //multiple\n          value={basicData.prjResearchField}\n          onChange={handleChange(\"prjResearchField\")(\"\")}\n          labelWidth={120}\n        >\n          {fields.map((field) => (\n            <MenuItem key={field.key} value={field.key}>\n              <ListItemText primary={field.value} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../styles\";\n\nexport function Review({ basicData, sensorData, optionalData }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.reviewStep}>\n      <div className={classes.reviewlines}>\n        <Typography variant=\"overline\">Project Title:</Typography>\n        <Typography variant=\"body1\" color=\"secondary\">\n          {basicData.prjTitle}\n        </Typography>\n      </div>\n      <div className={classes.reviewlines}>\n        <Typography variant=\"overline\">Project Description:</Typography>\n        <Typography\n          variant=\"body1\"\n          color=\"secondary\"\n          gutterBottom=\"true\"\n          noWrap=\"false\"\n        >\n          {basicData.prjDescription}\n        </Typography>\n      </div>\n      <div className={classes.reviewlines}>\n        <Typography variant=\"overline\">Start date:</Typography>\n        <Typography variant=\"body1\" color=\"secondary\">\n          {new Date(basicData.prjStartTime).toLocaleDateString(\"en-CA\")}\n        </Typography>\n      </div>\n      <div className={classes.reviewlines}>\n        <Typography variant=\"overline\">Funding amount:</Typography>\n        <Typography variant=\"body1\" color=\"secondary\">\n          {basicData.prjFunding} AUD\n        </Typography>\n      </div>\n      <div className={classes.reviewlines}>\n        <Typography variant=\"overline\">Sensors:</Typography>\n        <List>\n          {sensorData.map((tSensor) => (\n            <ListItem>\n              <ListItemText\n                primary={tSensor.sensorName}\n                secondary={\n                  \"Frequency: \" +\n                  tSensor.frequencyLevel +\n                  \", goal: \" +\n                  tSensor.recordsNum\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  LoginApi,\n  CreateAProject,\n  FetchFrequencies,\n} from \"services/api/ProjectOwner\";\nimport { BindApiRange } from \"./services\";\nimport routes from \"routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { CustomException, ErrorTypes } from \"utils/Error\";\nimport { Button, Divider, IconButton } from \"@material-ui/core\";\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBackIosRounded\";\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\nimport { useStyles } from \"./styles\";\nimport { Step, Stepper, StepLabel } from \"@material-ui/core\";\nimport { DemographicSetting } from \"./steppers/DemographicSetting\";\nimport { SensorSetting } from \"./steppers/SensorSetting\";\nimport { BasicSetting } from \"./steppers/BasicSetting\";\nimport { Review } from \"./steppers/Review\";\nimport Swal from \"sweetalert2\";\n\nfunction CreateProject() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState(new Set());\n  const todayDate = new Date().toLocaleDateString(\"en-CA\");\n  const steps = [\n    \"Basic setting\",\n    \"Sensors & Matchmaking\",\n    \"Demographic Setting\",\n    \"Review\",\n  ];\n  let history = useHistory();\n  let copyRequirement = [];\n  let copyGoals = [];\n\n  const [basicData, setBasicData] = useState({\n    prjTitle: \"\", //required\n    prjDescription: \"\", //required\n    prjResearchField: 0, // integer //required\n    prjStartTime: new Date(todayDate).toISOString(), //required\n    prjFunding: 1, //required\n    conversionRate: 1, //required\n    prjDuration: 1,\n    prjParticipantsNum: 1,\n    isFullRedeemOnly: true,\n  });\n  const [sensorData, setSensorData] = useState([]);\n  const [optionalData, setOptionalData] = useState({\n    GenderPrjRequirement: {\n      seriousness: 5,\n      genders: [],\n    },\n    MobileSystemPrjRequirement: {\n      seriousness: 5,\n      mobileSystems: [\"Android\"],\n    },\n    MobileDeviceTypePrjRequirement: {\n      seriousness: 5,\n      mobileDeviceTypes: [],\n    },\n    AndroidAPIPrjRequirement: {\n      seriousness: 5,\n      minAPILevel: 0,\n      maxAPILevel: 0,\n    },\n    // {\n    //   requirementType: \"LastGeoPrjRequirement\",\n    //   seriousness: 1,\n    //   gpsPoint: { lon: 0, lat: 0 },\n    //   radius: 1000, //minimun, max:50000\n    // },\n  });\n\n  const [frequencies, setFrequencies] = useState([]);\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const setFinalData = () => {\n    console.log(sensorData);\n    copyRequirement = [\n      {\n        requirementType: \"SensorPrjRequirement\",\n        seriousness: 5,\n        sensors: [],\n      },\n    ];\n    for (let i = 0; i < sensorData.length; i++) {\n      copyRequirement[0].sensors.push({\n        sensorId: sensorData[i].sensorId,\n        minimumFrequency: sensorData[i].minimumFrequency,\n      });\n    }\n\n    Object.keys(optionalData).forEach((eachOptionalReq) => {\n      switch (eachOptionalReq) {\n        case \"GenderPrjRequirement\": {\n          if (optionalData[eachOptionalReq].genders.length > 0) {\n            optionalData.GenderPrjRequirement.requirementType =\n              \"GenderPrjRequirement\";\n            copyRequirement.push(optionalData.GenderPrjRequirement);\n          }\n          break;\n        }\n        case \"MobileSystemPrjRequirement\": {\n          if (optionalData[eachOptionalReq].mobileSystems.length > 0) {\n            optionalData.MobileSystemPrjRequirement.requirementType =\n              \"MobileSystemPrjRequirement\";\n            copyRequirement.push(optionalData.MobileSystemPrjRequirement);\n          }\n          break;\n        }\n        case \"MobileDeviceTypePrjRequirement\": {\n          if (optionalData[eachOptionalReq].mobileDeviceTypes.length > 0) {\n            optionalData.MobileDeviceTypePrjRequirement.requirementType =\n              \"MobileDeviceTypePrjRequirement\";\n            copyRequirement.push(optionalData.MobileDeviceTypePrjRequirement);\n          }\n          break;\n        }\n        case \"AndroidAPIPrjRequirement\": {\n          if (\n            optionalData[eachOptionalReq].minAPILevel != 1 ||\n            optionalData[eachOptionalReq].minAPILevel != 30\n          ) {\n            optionalData.AndroidAPIPrjRequirement.requirementType =\n              \"AndroidAPIPrjRequirement\";\n            copyRequirement.push(optionalData.AndroidAPIPrjRequirement);\n          }\n          break;\n        }\n      }\n    });\n    for (let i = 0; i < sensorData.length; i++) {\n      copyGoals.push({\n        sensorId: sensorData[i].sensorId,\n        recordsNum:\n          (basicData.prjDuration * basicData.prjParticipantsNum * 86400000) /\n          frequencies[sensorData[i].minimumFrequency - 1],\n      });\n      console.log(\"hhhhhhhh\");\n      console.log(copyGoals);\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      var copyOfFrequencies = Object.values(await FetchFrequencies());\n      setFrequencies(copyOfFrequencies);\n      console.log(frequencies);\n    }\n    getData();\n  }, []);\n\n  const handleSubmit = async () => {\n    setFinalData();\n    const ToBeSentData = {\n      prjTitle: basicData.prjTitle, //required\n      prjDescription: basicData.prjDescription, //required\n      prjResearchField: basicData.prjResearchField, // integer //required\n      prjStartTime: basicData.prjStartTime, //required\n      prjFunding: basicData.prjFunding, //required\n      conversionRate: basicData.conversionRate,\n      matchmakingEnable: true,\n      prjRequirements: copyRequirement,\n      prjGoals: copyGoals,\n      matchmakingEnable: true,\n      isFullRedeemOnly: basicData.isFullRedeemOnly,\n    };\n\n    console.log(\"overallData\");\n    console.log(ToBeSentData);\n\n    try {\n      const retrievedToken = await firebase.auth().currentUser.getIdToken();\n      console.log(retrievedToken);\n      // Make API call to backend for creating a session\n      await LoginApi(retrievedToken);\n      const result = await CreateAProject(ToBeSentData, retrievedToken);\n\n      if (result) {\n        Swal.fire({\n          title: \"Congrats!\",\n          text: \"You created a new project!\",\n          icon: \"success\",\n        });\n        history.push(`${routes.authenticated.url}${routes.dashboard.url}`);\n      }\n    } catch (error) {\n      handleErrors([]);\n      if (error.type === ErrorTypes.CREAT_PROJECT) {\n        handleErrors([error.toString()]);\n      } else {\n        handleErrors([error.toString()]);\n      }\n    }\n  };\n\n  const handleDelete = (chipToDelete) => () => {\n    setFieldChipData((Chips) =>\n      Chips.filter((chip) => chip.key !== chipToDelete.key)\n    );\n  };\n\n  function getStepContent(step) {\n    //step component from material ui\n    switch (step) {\n      case 0:\n        return (\n          <BasicSetting setBasicData={setBasicData} basicData={basicData} />\n        );\n      case 1:\n        return (\n          <SensorSetting\n            setSensorData={setSensorData}\n            sensorData={sensorData}\n          />\n        );\n      case 2:\n        return (\n          <DemographicSetting\n            setOptionalData={setOptionalData}\n            optionalData={optionalData}\n          />\n        );\n      case 3:\n        return (\n          <Review\n            basicData={basicData}\n            sensorData={sensorData}\n            optionalData={optionalData}\n          />\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  useEffect(() => {\n    async function getData() {\n      const apiData = await BindApiRange();\n      console.log(apiData);\n      var l = apiData.length - 1;\n      setOptionalData({\n        ...optionalData,\n        AndroidAPIPrjRequirement: {\n          seriousness: 5,\n          minAPILevel: apiData[0],\n          maxAPILevel: apiData[l],\n        },\n      });\n    }\n    getData();\n  }, []);\n\n  return (\n    <Container className={classes.root}>\n      <Container>\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <Divider />\n      </Container>\n      <div className={classes.steps}>\n        <div className={classes.btnGroup}>\n          <IconButton\n            aria-label=\"back\"\n            disabled={activeStep === 0}\n            onClick={handleBack}\n          >\n            <ArrowBackIosRoundedIcon />\n          </IconButton>\n          <Button\n            disabled={activeStep === 0}\n            onClick={handleBack}\n            className={classes.button}\n          >\n            Back\n          </Button>\n        </div>\n\n        <Container className={classes.instructions}>\n          {getStepContent(activeStep)}\n        </Container>\n        <div className={classes.btnGroup}>\n          {activeStep !== steps.length - 1 ? (\n            <div>\n              <IconButton aria-label=\"next\" onClick={handleNext} size=\"large\">\n                <ArrowForwardIosRoundedIcon />\n              </IconButton>\n              <Button\n                color=\"secondary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <IconButton aria-label=\"next\" onClick={handleSubmit} size=\"large\">\n                <ArrowForwardIosRoundedIcon />\n              </IconButton>\n              <Button\n                onClick={handleSubmit} // submitted\n                className={classes.button}\n              >\n                Create\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default CreateProject;\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    scrollBehavior: \"auto\",\n    width: \"50%\",\n    minWidth: \"30rem\",\n    //backgroundColor: theme.palette.common.white,\n  },\n  paper: {\n    margin: \"3rem auto\",\n    height: \"12rem\",\n    width: \"20rem\",\n    borderRadius: \"15px\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    padding: \"1rem\",\n  },\n  box: {\n    margin: \"2rem auto\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n  },\n  text: {\n    width: \"100%\",\n    color: theme.palette.primary.main,\n    marginBottom: \"1.5rem\",\n  },\n  balance: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"flex-start\",\n    color: theme.palette.primary.main,\n  },\n  topUp: {\n    margin: \"0rem auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"80%\",\n    height: \"auto\",\n  },\n  moneyIcon: {\n    color: theme.palette.common.white,\n  },\n  button: {\n    marginTop: \"1rem\",\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.primary.dark,\n    borderRadius: \"30px\",\n  },\n}));\n","import {\n  Container,\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  IconButton,\n  FormControl,\n  FormHelperText,\n  OutlinedInput,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Loading from \"components/Loading\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useStyles } from \"./styles\";\nimport React, { useEffect, useState } from \"react\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport { BindBalance } from \"./services\";\nimport { LoginApi, UpdateBalance } from \"services/api/ProjectOwner\";\nimport { ErrorTypes } from \"utils/Error\";\nimport Swal from \"sweetalert2\";\n\nfunction Balance() {\n  const classes = useStyles();\n  const [currentBalance, setCurrentBalance] = useState();\n  const [addAmount, setAddAmount] = useState({ addValue: 0 });\n  const [errors, setErrors] = useState([]);\n  const [load, setLoad] = useState(true);\n\n  const handleChanges = async (event) => {\n    setAddAmount({ addValue: parseFloat(event.target.value) });\n  };\n\n  const handleErrors = (error) => {\n    setErrors([error]);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (addAmount.addValue < 1) {\n        handleErrors(\"The balance must be more than 1 AUD.\");\n        return;\n      } else if (addAmount.addValue > 9999) {\n        handleErrors(\"The balance must be lower than 9,999 AUD.\");\n      } else {\n        setErrors([]);\n      }\n      const retrievedToken = await firebase.auth().currentUser.getIdToken();\n      // Make API call to backend for creating a session\n      await LoginApi(retrievedToken);\n      let result = await UpdateBalance(addAmount, retrievedToken);\n      console.log(result);\n      setAddAmount({ addValue: 0 });\n      Swal.fire({\n        title: \"Paid!\",\n        text: \"You successfully top up!\",\n        // icon: \"success\",\n      });\n      let balance = await BindBalance();\n      balance = balance.toFixed(2);\n      console.log(balance);\n      setCurrentBalance(balance);\n    } catch (error) {\n      if (error.type === ErrorTypes.BACKEND_PROFILE) {\n        console.log(error.toString());\n      } else {\n        console.log(error.toString());\n      }\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      let balance = await BindBalance();\n      balance = balance.toFixed(2);\n      console.log(balance);\n      setCurrentBalance(balance);\n      setLoad(false);\n    }\n    getData();\n  }, []);\n\n  return load ? (\n    <Loading />\n  ) : (\n    <Container className={classes.root}>\n      <Paper elevation={10} className={classes.paper}>\n        <Box className={classes.box}>\n          <div className={classes.text}>\n            <Typography align=\"left\" variant=\"subtitle2\">\n              Current Balance:\n            </Typography>\n          </div>\n          <div className={classes.balance}>\n            <AttachMoneyIcon className={classes.moneyIcon} fontSize=\"large\" />\n            <Typography variant=\"h2\">{currentBalance}</Typography>\n            <Typography variant=\"h6\">AUD</Typography>\n          </div>\n        </Box>\n      </Paper>\n      <div className={classes.topUp}>\n        {errors.length > 0 &&\n          errors.map((error) => {\n            return <Alert severity=\"error\">{error}</Alert>;\n          })}\n        <TextField\n          type=\"number\"\n          value={addAmount.addValue}\n          onChange={handleChanges}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n            endAdornment: <InputAdornment position=\"end\">AUD</InputAdornment>,\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          disableElevation\n          className={classes.button}\n          startIcon={<PaymentIcon />}\n          onClick={handleSubmit}\n        >\n          Top Up\n        </Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default Balance;\n","import React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport Authenticated from \"components/Authenticated\";\nimport Dashboard from \"components/Dashboard\";\nimport Projects from \"components/Projects\";\nimport Profile from \"components/Profile\";\nimport CreateProject from \"components/CreateProject\";\nimport Balance from \"components/Balance\";\nimport { ProjectDetails } from \"components/Projects/ProjectDetail\";\n\nconst AuthenticatedScene = () => {\n  let { path, url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route\n        path={`${path}${routes.dashboard.url}`}\n        render={() => <Authenticated ProtectedComponent={Dashboard} />}\n      />\n      <Route\n        path={`${path}${routes.projects.url}`}\n        render={() => <Authenticated ProtectedComponent={Projects} />}\n      />\n      <Route\n        path={`${path}${routes.profile.url}`}\n        render={() => <Authenticated ProtectedComponent={Profile} />}\n      />\n      <Route\n        path={`${path}${routes.createProject.url}`}\n        render={() => <Authenticated ProtectedComponent={CreateProject} />}\n      />\n      <Route\n        path={`${path}${routes.balance.url}`}\n        render={() => <Authenticated ProtectedComponent={Balance} />}\n      />\n      <Route\n        path={`${path}${routes.projectDetails.url}`}\n        render={() => <Authenticated ProtectedComponent={ProjectDetails} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthenticatedScene;\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport LoginScene from \"./scenes/Login\";\nimport RegisterScene from \"./scenes/Register\";\nimport ForgotPasswordScene from \"./scenes/ForgotPassword\";\nimport AuthenticatedScene from \"./scenes/Authenticated\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Switch>\n        <Route exact path=\"/\" render={() => <LoginScene />} />\n        <Route\n          exact\n          path={routes.register.url}\n          render={() => <RegisterScene />}\n        />\n        <Route\n          exact\n          path={routes.forgotPwd.url}\n          render={() => <ForgotPasswordScene />}\n        />\n        <Route exact path={routes.login.url} render={() => <LoginScene />} />\n        <Route\n          path={routes.authenticated.url}\n          render={() => <AuthenticatedScene />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport AuthProvider from \"providers/auth\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}